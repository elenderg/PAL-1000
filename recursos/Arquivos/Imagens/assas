program HelloWin;

uses
  Windows;

function WndProc(hwnd: HWND; message: UINT; wParam: WPARAM; lParam: LPARAM): LRESULT; stdcall;
var
  hdc: HDC;
  ps: PAINTSTRUCT;
  rect: TRECT;
begin
  case message of
    WM_CREATE:
      begin
        PlaySound('hellowin.wav', 0, SND_FILENAME or SND_ASYNC);
        Result := 0;
      end;
    WM_PAINT:
      begin
        hdc := BeginPaint(hwnd, @ps);
        GetClientRect(hwnd, rect);
        DrawText(hdc, 'Hello, Windows 98!', -1, rect, DT_SINGLELINE or DT_CENTER or DT_VCENTER);
        EndPaint(hwnd, ps);
        Result := 0;
      end;
    WM_DESTROY:
      begin
        PostQuitMessage(0);
        Result := 0;
      end;
  else
    Result := DefWindowProc(hwnd, message, wParam, lParam);
  end;
end;

function WinMain(hInstance: HINST; hPrevInstance: HINST; szCmdLine: PSTR; iCmdShow: Integer): Integer; stdcall;
var
  szAppName: array[0..10] of Char;
  hwnd: HWND;
  msg: MSG;
  wndclass: WNDCLASS;
begin
  StrPCopy(szAppName, 'HelloWin');

  wndclass.style         := CS_HREDRAW or CS_VREDRAW;
  wndclass.lpfnWndProc   := @WndProc;
  wndclass.cbClsExtra    := 0;
  wndclass.cbWndExtra    := 0;
  wndclass.hInstance     := hInstance;
  wndclass.hIcon         := LoadIcon(0, IDI_APPLICATION);
  wndclass.hCursor       := LoadCursor(0, IDC_ARROW);
  wndclass.hbrBackground := HBRUSH(GetStockObject(WHITE_BRUSH));
  wndclass.lpszMenuName  := nil;
  wndclass.lpszClassName := szAppName;

  if RegisterClass(wndclass) = 0 then
  begin
    MessageBox(0, 'This program requires Windows NT!', szAppName, MB_ICONERROR);
    Result := 0;
    Exit;
  end;

  hwnd := CreateWindow(szAppName, 'The Hello Program', WS_OVERLAPPEDWINDOW,
    CW_USEDEFAULT, CW_USEDEFAULT, CW_USEDEFAULT, CW_USEDEFAULT, 0, 0, hInstance, nil);

  ShowWindow(hwnd, iCmdShow);
  UpdateWindow(hwnd);

  while GetMessage(msg, 0, 0, 0) do
  begin
    TranslateMessage(msg);
    DispatchMessage(msg);
  end;

  Result := msg.wParam;
end;

begin
  WinMain(GetModuleHandle(nil), nil, '', SW_SHOWNORMAL);
end.
