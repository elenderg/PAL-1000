Gerry,

\ Sounds good. But how can the overall time bounce around if
\ the individual times are consistent? Surely the overall time is
\ never less than the sum of the individual times, so where is
\ the extra time going (or coming from)?

Touché!

Usually the overall test time bounces around between
120 ms and 150 ms.  Here is a recent run of overall test times,
in milliseconds:
219, 130, 144, 133, 132, 139, 131, 131, 132, 132, 132
It seems that the high values (such as 219 and 144)
happen after I have been doing things other than compiling
and testing CAL.  Perhaps the OS or processor needs
to look stuff up at first, and then uses cached values
or pipelines later on.

I have not noticed any variations in the run-times
of the fastest tests.  They always seem to be 4 µs.

My longest running tests are consistently ranked from run-to-run.

I just had a 144 millisecond overall run,
and the longest test took 22 ms instead of its usual 15 ms.
This test measures the width of a text string in arial font.
Subsequent font width tests are consistently much faster.

My third-longest test usually takes 8 or 9 ms,
but I have seen it take 10 ms.  This test verifies that
200021 is not prime, and caches the primes through its square root.

I have not investigated how much time is "between tests",
nor how much time is spent timing the tests.

-- Jasper