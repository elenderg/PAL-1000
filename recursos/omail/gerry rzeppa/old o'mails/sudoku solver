The sudoku solver is pretty sweet, and very recursive. I never thought about how I'd write
a program to solve one of those, but that's a very elegant solution.

It's cool to watch it as it solves.

One question, in the routine to fill a puzzle, should the nil check happen before you possibly put 0 into the cell's number?

Here's the code in question:

      To fill a puzzle from a string:
      Privatize the string.
      Loop.
      If the string is blank, break.
      Get a cell from the puzzle's cells.
      Get a byte from the string.
      If the byte minus 48 is not between 1 and 9, put 0 into the cell's number; repeat.
      If the cell is nil, break.
      Put the byte minus 48 into the cell's number.
      Set the cell's given flag.
      Repeat.

