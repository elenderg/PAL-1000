after reading your last message and thinking through the hardware and software requirements, i just
bought an fpga development board. i've wanted to grab one for a while, but i had no project driving
the learning. now i have one! (kind of...)

not surprised that i've done it before or not surprised that i'd like to do it again? both? meh, i
just like learning and developing new skills.

\ It was both.

have you done any operating system development in Plain English? i've taken an os/kernel class,
but i've never actually developed one. i've written linux kernel code; i've written minix kernel code;
i've even written windows kernel-driver code. but i've never created an os/kernel.

\ An operating system, in my mind, is little more than a collection of subroutines, ideally in ROM, that
\ provide hardware-independent, reasonably high-level access to 4 gigs of RAM and a file system, a display,
\ a keyboard, a mouse, a printer, a speaker, and serial communication ports (for internet access and
\ connection to analog and digital devices).  In short, the device drivers are the hard and critical part of
\ an operating system; the rest can be as simple as DOS or the original Mac. (I had a Radio Shack computer
\ once with DOS in ROM, and the original Mac had all the important subroutines in ROM as well.)
\ Here's the executable format I dream of for such a system:

\ Byte 0: the first instruction to be executed.
\ Bytes 1-n: whatever the compiler writer wants them to be.

i have begun reading [Koopman]. i'm also reading the oberon pdf.

\ Great. More common ground.

if we can agree on some architecture to target, we could get Plain English running on an fpga-aided
hardware chip. and then eventually actual hardware.

\ I suspect that you said, "Plain English," rather than "the CAL," because you know how hard it would be to
\ connect an FPGA to all the things the CAL assumes are there: 4 gigs of RAM, a file system, a display,
\ a keyboard, a mouse, etc.

\ If what you mean by getting "Plain English running on an FPGA-aided hardware chip" is using a
\ modified CAL (running on Windows) to generate machine code that is compatible with the FPGA system,
\ that is, of course, feasible. But that would no longer be the CAL because the generated program would not
\ look and feel like the CAL on Windows, and he would not be able to reproduce himself using nothing but
\ the FPGA system. Unless, of course, the FPGA system had all the capabilities described above.

or we could virtualize.

\ I'm not sure how a virtual system would serve us.

i'm also getting high off the possibilities, so i might be signing myself up for more than i can support.
but whatever: enthusiasm is the great driver of innovation. (necessity will always be there; energy is the good
shepherd.)

\ Far be it from me to squelch enthusiasm and innovation. I'm just the kind of guy who likes to keep the
\ goal in sight so I can judge, at each step, whether the current activity is getting me closer to the goal.

but seriously, if there is an operating system, we need hardware.

\ Yes, but hardware with the kind of capabilities readily available today. I can get 64 gigabytes of memory
\ on a flash drive for about 2 bucks; it should be easy to get just 4 gigs of memory on my FPGA machine, yes?
\ I can get a USB keyboard and mouse for $14; will I be able to hook them up to my FPGA machine?
\ I can get a 19-inch monitor with millions of colors for under $100; will I be able to use that on my FPGA machine?
\ I can get a nice ink-jet printer for $39; will I be able to use that with my FPGA machine?
\ If the answeres to all those questions is, "yes," I think we'd have a prototype worthy of some venture capital.

i assume you're not targeting the standard intel asm (because it's a bloated whale of a system).

\ Not targeting the Intel x86 in the long run, no. But for now, it's pretty much the only game in town -
\ it is (a) readily available, and (b) not a moving target (the instructions we use haven't been changed in decades).
\ And you can get x86 chips bundled with Windows, which gives us all those operating system "subroutines" we need,
\ along with hardware-independent access to all the devices mentioned above.

take the iphone route (custom software to match custom hardware). 

\ I'm all for that. Really. I dream of re-inventing the original Macintosh, from scratch, in Plain English.
\ But we're going to need a lot more money and a much bigger garage than Steve and Steve did,
\ because the CAL won't fit on an 8-bit 6502 (or even a 16/32-bit 68000).

i like this. the console is where i spend most of my time. the fact that CAL has easy console
support is music to my soul.

\ You can scroll the console with the right-mouse when it's waiting for input. We didn't use it enough to
\ put in the event processing for selection, editing, copy, and paste, though. Sorry.

\ Again, I don't want to be a wet blanket, and I certainly don't want to discourage anyone from learning new
\ things and being creative. So if you've got an idea you believe in, go for it. I'll help however I can.

\ Gerry