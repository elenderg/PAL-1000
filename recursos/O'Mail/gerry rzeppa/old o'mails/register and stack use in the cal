ream cal-3024
  page 12240 15840 1 1440
    text -1 0 0 -1 0 0 1440 1440 10800 14400 0 "title" "osmosian" 360 "left" 0 0 0 yes
       "REGISTERS AND THE STACK"
       ""
       "Intel processors have a handful of registers, each 4-bytes long. Here are the ones we use:"
       ""
       ""
       ""
       "The EAX, EBX, ECX, and EDX registers are general-purpose, more or less, and most of the Intel's instructions operate on (or with) one or more of them."
       ""
       "The EBP and ESP registers, on the other hand, are used to manipulate the STACK which is an area of memory that you can think of like a stack of dinner plates, with each plate representing a saved register value, or an address somewhere in the program's code, or the address of a variable (that lives somewhere else in memory), or the contents of a variable. As is typical with Windows, the stack grows backways: that is, the address of the ""top"" of the stack is always less than the address of the ""bottom""."
       ""
       "The ESP register always holds the address of the ""top"" of the stack. The EBP register holds the address of the ""bottom"" of the stack for the current routine. By convention, this is how the stack is used:"
       ""
       ""
       ""
       ""
       ""
       ""
       ""
       ""
       ""
       "You can see that, once things are set up, our first parameter will be at the address in the EBP register plus 8, the second parameter at the address in EBP plus 12, etc. And that our local variables will be a the address in the EBP register minus 4, minus 8, etc."
       ""
       "The Intel knows how to PUSH 4-byte values and addresses onto the stack, and how to POP them back off. To get larger things on and off the stack we need to play with the ESP register ourselves. Subtracting 16 from the address in ESP, for example, makes room for 16 bytes of local data at the ""top"" of the stack; adding 16 takes those bytes off the stack."
    end
    text -1 0 0 -1 0 0 10800 14760 11520 15120 0 "page number" "osmosian" 360 "right" 0 0 0 yes
       "10"
    end
    text 0 0 0 -1 0 0 1440 2880 2160 3240 0 "" "osmosian" 360 "left" 0 0 0 yes
       "EAX"
    end
    text 0 0 0 -1 0 0 2520 2880 3240 3240 0 "" "osmosian" 360 "left" 0 0 0 yes
       "EBX"
    end
    text 0 0 0 -1 0 0 3600 2880 4320 3240 0 "" "osmosian" 360 "left" 0 0 0 yes
       "ECX"
    end
    text 0 0 0 -1 0 0 4680 2880 5400 3240 0 "" "osmosian" 360 "left" 0 0 0 yes
       "EDX"
    end
    text 0 0 0 -1 0 0 5760 2880 6480 3240 0 "" "osmosian" 360 "left" 0 0 0 yes
       "EBP"
    end
    text 0 0 0 -1 0 0 6840 2880 7560 3240 0 "" "osmosian" 360 "left" 0 0 0 yes
       "ESP"
    end
    text 0 0 0 -1 0 0 2880 9360 5760 9720 0 "" "osmosian" 360 "left" 0 0 0 yes
       "saved EBP"
    end
    text 0 0 0 0 0 875 2880 9720 5760 10080 0 "" "osmosian" 360 "left" 0 0 0 yes
       "return address"
    end
    text 0 0 0 -1 0 0 2880 10080 5760 10440 0 "" "osmosian" 360 "left" 0 0 0 yes
       "parameter 1"
    end
    text 0 0 0 -1 0 0 2880 10440 5760 10800 0 "" "osmosian" 360 "left" 0 0 0 yes
       "parameter 2"
    end
    text 0 0 0 -1 0 0 2880 10800 5760 11160 0 "" "osmosian" 360 "left" 0 0 0 yes
       "parameter 3"
    end
    text 0 0 0 -1 0 0 2880 9000 5760 9360 0 "" "osmosian" 360 "left" 0 0 0 yes
       "local variable 1"
    end
    text 0 0 0 -1 0 0 2880 8640 5760 9000 0 "" "osmosian" 360 "left" 0 0 0 yes
       "local variable 2"
    end
    text -1 0 0 -1 0 0 6480 10440 9270 10800 0 "" "osmosian" 360 "left" 0 0 0 yes
       "set up by caller"
    end
    text -1 0 0 -1 0 0 6480 9000 9270 9360 0 "" "osmosian" 360 "left" 0 0 0 yes
       "set up by callee"
    end
    text -1 0 0 -1 0 0 6480 9720 10080 10080 0 "" "osmosian" 360 "left" 0 0 0 yes
       "set up by the CALL instruction"
    end
    text -1 0 0 -1 0 0 1440 9360 2520 9720 0 "" "osmosian" 360 "right" 0 0 0 yes
       "EBP"
    end
    group
      polygon 0 0 0 -1 0 0 25 6031 8640 6076 8640 6119 8647 6155 8668 6184 8710 6200 8780 6210 8866 6217 8955 6225 9034 6239 9090 6255 9129 6268 9157 6274 9180 6268 9202 6255 9230 6239 9270 6225 9326 6217 9405 6210 9494 6200 9579 6184 9650 6155 9692 6119 9713 6076 9720 6031 9720
      polygon 0 0 0 -1 0 0 25 6031 10080 6076 10080 6119 10087 6155 10108 6184 10150 6200 10220 6210 10306 6217 10395 6225 10474 6239 10530 6255 10569 6268 10597 6274 10620 6268 10642 6255 10670 6239 10710 6225 10766 6217 10845 6210 10934 6200 11019 6184 11090 6155 11132 6119 11153 6076 11160 6031 11160
      polygon 0 0 0 -1 0 0 2 6030 9900 6390 9900
    end
    text -1 0 0 -1 0 0 1440 9720 2520 10080 0 "" "osmosian" 360 "right" 0 0 0 yes
       "EBP + 4"
    end
    text -1 0 0 -1 0 0 1440 10080 2520 10440 0 "" "osmosian" 360 "right" 0 0 0 yes
       "EBP + 8"
    end
    text -1 0 0 -1 0 0 1440 10440 2520 10800 0 "" "osmosian" 360 "right" 0 0 0 yes
       "EBP + 12"
    end
    text -1 0 0 -1 0 0 1440 10800 2520 11160 0 "" "osmosian" 360 "right" 0 0 0 yes
       "EBP + 16"
    end
    text -1 0 0 -1 0 0 1440 9000 2520 9360 0 "" "osmosian" 360 "right" 0 0 0 yes
       "EBP-4"
    end
    text -1 0 0 -1 0 0 1440 8640 2520 9000 0 "" "osmosian" 360 "right" 0 0 0 yes
       "EBP-8"
    end
  end
end
