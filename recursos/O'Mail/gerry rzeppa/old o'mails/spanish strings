In the spanishstrings directory in "the noodle", I've rewritten the following functions:

to compare a string to another string given a length and another length (equal only):
to compare a string to another string given a length and another length returning a number:
to lowercase a byte:
to uppercase a byte:

Actually I just used the Windows' functions to implement them.

You can find them quickly by searching for "\ dahn - spanish strings"

They don't use null terminated strings, so they should be fast.

The "test" files has some test cases. It should only debug an all uppercase string and an
all lowercase string if it is working.

When I was implementing "to compare a string to another string given a length and another length returning a number:"
I tried to write:

if the length is 0 and the other length is 0, put 0 into the number; exit.

But apparently, the compiler doesn't automatically handle that sort of thing. It looks like we added a couple special
routines to do similar stuff at one point. See "To decide if a number is another number and a string is another string"

I ended up adding "To decide if a number is another number and a third number is a fourth number:" and
"To decide if a number is another number and a third number is greater than a fourth number:" which are used in the 
aforementioned compare routine.

Is there a better way to do this, or should the compiler handle this sort of thing?

The other weird thing is that the compiler will compile:

if the length is 0 and the other length is not 0, put -1 into the number; exit.
  
But it doesn't actually work since the entire statement get's not-ed.


