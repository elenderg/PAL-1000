\ I'm answering out of sequence to keep this a brief as possible.

also, i know this is your baby, so let me know if i'm doing anything that goes against the spirit
of CAL, please.

\ Almost everything you've described is contrary to the spirit of the CAL.
\ A fundamental Osmosian principle is that we learn faster and better by imitating, not by creating.
\ Had you printed the first 54 pages of the manual, as instructed, and typed and run the sample program,
\ bit by bit, exactly as instructed by the CAL, asking questions as you went along,
\ you could have easily avoided ALL of the problems you describe.
\ And future questions would be easier to answer because we'd have a common Plain English
\ programming experience I could refer to when I needed an example.

i'll probably compile a new editor with a few changes to make it feel a little bit more like vi(m).

\ A bit more like vi(m) is, by definition, a bit less like the CAL.
\ The CAL's mission is to get programmers to change; not to get programmers to change the CAL.
\ How else will you ever learn that editing with a mouse is actually better than editing with keyboard only?
\ User friendly, I know, is "what the user is used to," and ingrained habits are hard to break,
\ but "I like my way" is a far cry from "objectively superior."

my company is shipping a new release of our software in a week , so i won't have more free time until then.

\ I hope your release is successful and trouble-free. No problem with the delay. You set the pace.
\ When you return, perhaps you should start back at Square One, print the instructions,
\ and see what happens (not just on your computer, but in your brain) when you allow some Osmosian
\ principles and practices to seep in. Don't forget to ask questions AS YOU GO ALONG. You don't even
\ have to leave the CAL to write me.

i hope that last paragraph didn't raise your blood pressure. i don't think there are any shortcomings
in CAL; they're all in me.

\ If you really believe that's so, shouldn't the changes be made where the shortcomings are?

is there a way currently to find a string backwards? i've been getting around it by just going to
the top of the page and CTRL-F. if not, i can just write one.

\ You've made Aunt Tilly smile, figuring out how to do without something all by yourself.
\ The habit to cultivate here is CTRL-HOME-F, start typing; then CTRL-N. Works every time.
\ We didn't include a reverse find because it didn't appear to be worth the cost.
\ And the only time we wanted it was when we were rushing, which is a bad habit.
\ We left out "Find All" and "Change All" as well, for similar reasons.

\ Learning to live without things is part of the spirit of the CAL, so don't write what we don't need.
\ Feature creep is a bad thing. Before you know it, the Linux kernel, originally 176,250 lines of code,
\ soon grows to over 20 million lines. And even the original 176,250 was way too many:
\ Niklaus Wirth's Oberon (which included mouse, font, and graphic support) was only 25,000 lines.

i'm still struggling with treating coding like speaking.

\ You will succeed more quickly by doing things the Osmosian way.
\ We insist that the novice Plain English programmer type in (not copy and paste) the sample program,
\ exactly as it appears in the instructions, without fully understanding how it works, so he won't be thinking
\ of some obtuse way of coding in his head and trying to translate that into English. It's the quickest and
\ best way to get an experienced programmer to unlearn bad habits and acquire the habit of thinking about
\ programming in English.

i have some questions about how CAL handles the overloading/polymorphic type-constraining in
function calls. i don't know the proper terminology for that. i'll probably do more reading and
figure out what's happening. it's usually what happens: i pose a question, then i find the information
some trivial amount of time later.

\ Surely you can see that jumping in the middle, making a mess, and then trying to question your way out
\ is not the most effective way to absorb something. Do you read novels in this haphazard way?

hope you had a very happy thanksgiving!

\ Thanksgiving was great; we have much to be thankful for, including folks like you who take an
\ interest in Plain English. Write again when you have time.

\ Gerry

\ Your original post is below.

when i started the calculator interface, i didn't understand how lists and things worked...
so i just created lots of globals (0-button, 1-button, etc). then i decided that i hated that, so i figured
out how lists work. the code is much nicer. i was also getting some drip(s) debug output, so i
found out that i have to finalize/destroy memory allocations.

basically, my progress so far has gone thusly:
* get really excited and copy-paste whatever looks promising
* fail to compile
* do lots of searching and figure out how things are working
* fix things and optimize (prematurely)
* fix other things and flatten the unnecessary loops
* it compiles!!
* why isn't this status box updating?
* okay, the status is updating, but it's not clearing
* okay, it's clearing and updating, but it's not sticking to its boundary

and that's where i am now. i know how to fix the boundary issue, but my company is shipping a new
release of our software in a week, so i won't have more free time until then. at least i can have
the instructions up in a browser window to keep reading through the gray matter material.

as i have been working in a console-only text editor for all of my professional life (which is almost
half my actual life), i'll probably compile a new editor with a few changes to make it feel a little bit
more like vi(m). not because there's anything wrong with the editor; there's just too much muscle
memory fighting against me all the time. (lots of "j"s and "k"s wind up in the code, because that's
how i go up and down lines in vi(m)). since i use vi(m) for my day job (and i generally avoid using
the mouse), it'll just make me more productive.

i hope that last paragraph didn't raise your blood pressure. i don't think there are any shortcomings
in CAL; they're all in me. 

is there a way currently to find a string backwards? i've been getting around it by just going to
the top of the page and CTRL-F. if not, i can just write one.

the calculator interface is on another computer, so once i boot that again, i'll upload it so you
can have a nice chuckle at my noob inefficiencies. i'm still struggling with treating coding like
speaking.

i have some questions about how CAL handles the overloading/polymorphic type-constraining in
function calls. i don't know the proper terminology for that. i'll probably do more reading and
figure out what's happening. it's usually what happens: i pose a question, then i find the information
some trivial amount of time later.

peace,
mo