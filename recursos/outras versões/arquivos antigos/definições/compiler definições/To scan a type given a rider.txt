To scan a type given a rider:
If the compiler's abort flag is set, exit.
Add the type to the types given the rider's token's first.
Move the rider (compiler rules).
Scan the type's name given the rider.
Put the type's name into the type's plural name.
Pluralize the type's plural name.
If the rider's token is "has" or "have", scan the type given the rider (has or have); exit.
If the rider's token is not "is" or "are", abort with "I was expecting an 'is' or 'are', but I found '" then the rider's token then "'." and the rider; exit.
Move the rider (compiler rules).
If the rider's token is any numeric literal, scan the type given the rider (unit of measure); exit.
If the rider's token is not any indefinite article, abort with "I was expecting an indefinte article, but I found '" then the rider's token then "'." and the rider; exit. 
Move the rider (compiler rules).
Scan the type's base name given the rider.
Scan any optional info for the type given the rider.
If the rider's token is not the period byte, abort with "Types need to end with a period, I found '" then the rider's token then "'." and the rider; exit.
Move the rider (compiler rules).
Index the type.
