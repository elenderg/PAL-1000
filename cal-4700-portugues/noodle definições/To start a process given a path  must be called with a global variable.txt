To start a process given a path: \ must be called with a global variable
Clear the i/o error.
If the process is not 0, put "I'm sorry, but that process is already running." into the i/o error; exit.
Put a startupinfo's magnitude into the startupinfo's cb.
Extract a directory from the path. null terminate the directory.
Privatize the path. null terminate the path.
Call "kernel32.dll" "CreateProcessA" with the path's first and 0 and 0 and 0 and 0 and 67108904 [create_default_error_mode + normal_priority_class + detached_process] and 0
And the directory's first and the startupinfo's whereabouts and a processinfo's whereabouts returning a number.
If the number is 0, put "I'm unable to run the program." into the i/o error; exit.
Put the processinfo's hprocess into the process.
Call "kernel32.dll" "CloseHandle" with the processinfo's hthread.
Point a pointer to routine wait for a process pointer.
Call "kernel32.dll" "CreateThread" with 0 and 0 and the pointer and the process's whereabouts and 0 and another number's whereabouts returning a handle.
Call "kernel32.dll" "CloseHandle" with the handle. \ does not end the thread, just dumps the handle
