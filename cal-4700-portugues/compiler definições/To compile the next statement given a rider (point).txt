To compile the next statement given a rider (point):
Move the rider (compiler rules).
Compile a term given the rider.
If the compiler's abort flag is set, exit.
If the term's variable is nil, abort with "I don't understand the variable '" then the term's phrase then "'." and the rider; exit.
If the term's kind is "literal", abort with "You've got the wrong kind of variable here." and the rider.
If the term's type's length is not 4, abort with "You've got the wrong kind of variable here." and the rider.
If the rider's token is not "to", abort with "I was expecting the word 'to', but found '" then the rider's token then "'." and the rider; exit.
Move the rider (compiler rules).
If the rider's token is not "routine", abort with "I was expecting the word 'routine' but found '" then the rider's token then "'." and the rider; exit.
Move the rider (compiler rules).
Compile a routine reference given the rider.
Convert the routine reference to a moniker.
Destroy the routine reference.
Find a routine given the moniker and the routine index.
If the routine is nil, abort with "I can't find the '" then the moniker then "' routine to which you are trying to point." and the rider; exit.
Add a fragment given the routine address tag and the routine.
Put the term's variable into the fragment's variable.
