To address a fragment given an address:
If the compiler's abort flag is set, exit.
If the fragment is nil, exit.
Put the image base plus the address into the fragment's address.
If the fragment's tag is the push address tag, add 7 to the address; exit.
If the fragment's tag is the call internal tag, add 5 to the address; exit.
If the fragment's tag is the load address tag, add 12 to the address; exit.
If the fragment's tag is the increment tag, add 10 to the address; exit.
If the fragment's tag is the dereference tag, add 14 to the address; exit.
If the fragment's tag is the jump false tag, add 9 to the address; exit.
If the fragment's tag is the not tag, add 3 to the address; exit.
If the fragment's tag is the exit tag, add 5 to the address; exit.
If the fragment's tag is the repeat tag, add 5 to the address; exit.
If the fragment's tag is the break tag, add 5 to the address; exit.
If the fragment's tag is the prolog tag, address the fragment given the address (prolog); exit.
If the fragment's tag is the epilog tag, address the fragment given the address (epilog); exit.
If the fragment's tag is the intel tag, add the fragment's code's length to the address; exit.
If the fragment's tag is the push value tag, address the fragment given the address (push value); exit.
If the fragment's tag is the call external tag, add 6 to the address; exit.
If the fragment's tag is the load eax tag, add 8 to the address; exit.
If the fragment's tag is the save eax tag, address the fragment given the address (save eax); exit.
If the fragment's tag is the call indirect tag, add 8 to the address; exit.
If the fragment's tag is the routine address tag, add 12 to the address; exit.
