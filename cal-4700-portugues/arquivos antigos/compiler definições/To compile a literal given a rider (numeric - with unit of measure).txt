To compile a literal given a rider (numeric - with unit of measure):
If the compiler's abort flag is set, exit.
Convert the rider's token to a ratio.
Move the rider (compiler rules).
Scan a name given the rider.
Find a type given the name and the type index.
If the type is nil, abort with "'" then the name then "' is an invalid unit of measure." and the literal's locus; exit.
If the type cannot be reduced to "number", abort with "'" then the name then "' is an invalid unit of measure." and the literal's locus; exit.
Put the type's scale into a final ratio.
If the type's scale is 0, put 1/1 into the final ratio.
Multiply the final ratio by the ratio.
Reduce the final ratio.
If the final ratio's denominator is 0, abort with "We seem to have an invalid unit of measure here." and the literal's locus.
Put the final ratio's numerator divided by the final ratio's denominator into a number.
Put the type's name into the literal's type name.
Convert the number to the literal's data.
Resolve the literal.
