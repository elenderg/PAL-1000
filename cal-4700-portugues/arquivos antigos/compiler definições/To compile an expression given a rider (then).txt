To compile an expression given a rider (then):
If the compiler's abort flag is set, exit.
If the expression's variable is nil, abort with "Invalid 'then', I don't understand the variable '" then the expression's phrase then "'." and the rider; exit.
Move the rider (compiler rules).
Compile a term given the rider.
If the compiler's abort flag is set, exit.
If the term's variable is nil, abort with "Invalid 'then', I don't understand the variable '" then the term's phrase then "'." and the rider; exit.
Add an intermediate given "string" and the rider's token's first.
Add the put or convert fragments given the expression's variable and the intermediate and the rider's token's first.
Convert the term for concatenation given the rider.
Add several fragments given "append" and the term's variable and "to" and the intermediate and the rider's token's first.
Put the intermediate into the expression's variable.
Clear the expression's phrase.
