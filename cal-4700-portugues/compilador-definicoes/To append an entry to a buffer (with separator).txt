To append an entry to a buffer (with separator):
If the entry is nil, append "" to the buffer (with separator); exit.
Append the entry's name to the buffer (with separator).
 
To append a flag to a buffer (with separator):
Convert the flag to a string.
Append the string to the buffer (with separator).
To append a number to a buffer (as hex with separator):
Convert the number to a nibble string.
Append the nibble string to the buffer (with separator).
 
To append a number to a buffer (with separator):
Convert the number to a string.
Append the string to the buffer (with separator).
 
To append a ratio to a buffer (with separator):
Convert the ratio to a string.
Append the string to the buffer (with separator).
 
To append a routine to a buffer (with separator):
If the routine is nil, append "" to the buffer (with separator); exit.
Append the routine's moniker to the buffer (with separator).
To append a string to a buffer (with separator):
Append the string to the buffer.
Append "/" to the buffer.
 
To append a tag to a buffer (as a fragment tag string with separator):
If the tag is the break tag, append "break" to the buffer (with separator); exit.
If the tag is the call external tag, append "call external" to the buffer (with separator); exit.
If the tag is the call indirect tag, append "call indirect" to the buffer (with separator); exit.
If the tag is the call internal tag, append "call internal" to the buffer (with separator); exit.
If the tag is the dereference tag, append "dereference" to the buffer (with separator); exit.
If the tag is the end if tag, append "end if" to the buffer (with separator); exit.
If the tag is the epilog tag, append "epilog" to the buffer (with separator); exit.
If the tag is the exit tag, append "exit" to the buffer (with separator); exit.
If the tag is the finalize tag, append "finalize" to the buffer (with separator); exit.
If the tag is the increment tag, append "increment" to the buffer (with separator); exit.
If the tag is the intel tag, append "intel" to the buffer (with separator); exit.
If the tag is the jump false tag, append "jump false" to the buffer (with separator); exit.
If the tag is the load address tag, append "load address" to the buffer (with separator); exit.
If the tag is the load eax tag, append "load eax" to the buffer (with separator); exit.
If the tag is the loop tag, append "loop" to the buffer (with separator); exit.
If the tag is the not tag, append "not" to the buffer (with separator); exit.
If the tag is the prolog tag, append "prolog" to the buffer (with separator); exit.
If the tag is the push address tag, append "push address" to the buffer (with separator); exit.
If the tag is the push value tag, append "push value" to the buffer (with separator); exit.
If the tag is the save eax tag, append "save eax" to the buffer (with separator); exit.
If the tag is the repeat tag, append "repeat" to the buffer (with separator); exit.
If the tag is the routine address tag, append "routine address" to the buffer (with separator); exit.
Append "?" to the buffer (with separator).
 
To append a type to a buffer (with separator):
If the type is nil, append "" to the buffer (with separator); exit.
Append the type's name to the buffer (with separator).
 
To append a variable to a buffer (with separator):
If the variable is nil, append "" to the buffer (with separator); exit.
Append the variable's name to the buffer (with separator).
