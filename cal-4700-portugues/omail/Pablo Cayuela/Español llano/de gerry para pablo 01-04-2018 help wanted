Hola, Papa!

Please read my other "01-04-2018 why it is easy to convert plain english to español llano" post first.

Since Plain English and Español Llano allow spaces in type, variable, and routine names,
(unlike every other programming language on the planet!) we need to know where those names begin and end.
We use the following routines (and some others, already translated) to help us do that
(the string in each case is the current token that the parser has extracted from the source code):

To decide if a string is any name starter: \ compare with name ender
If the string is any mark, say no.
If the string is any symbol, say no.
If the string is any article, say no.
If the string is any conjunction, say yes.
If the string is any possessive, say no.
If the string is any verb, say yes.
If the string is any operator, say yes.
If the string is any preposition, say yes.
If the string is any qualifier, say no.
If the string is any literal, say no.
If the string is "called", say yes. \ as in "...20 bytes CALLED filler"
If the string is "equal", say yes. \ an in "...is a byte EQUAL to 13. 
If the string is blank, say no.
Say yes.

To decide if a string is any name ender: \ compare with name starter
If the string is any mark, say yes.
If the string is any symbol, say yes.
If the string is any article, say yes.
If the string is any conjunction, say yes.
If the string is any possessive, say yes.
If the string is any verb, say yes.
If the string is any operator, say yes.
If the string is any preposition, say yes.
If the string is any qualifier, say yes.
If the string is any literal, say yes.
If the string is "called", say yes.
If the string is "equal", say yes.
If the string is blank, say yes.
Say no.

To decide if a string is any verb: \ only used in decider headers and IF statements
If the string is "are", say yes. \ are not \ aren't
If the string is "be", say yes. \
If the string is "can", say yes. \ cannot \ can't
If the string is "cannot", say yes. 
If the string is "could", say yes. \ could not \ couldn't
If the string is "do", say yes. \ do not \ don't
If the string is "does", say yes. \ does not \ doesn't
If the string is "is", say yes. \ is not \ isn't
If the string is "may", say yes. \ may not \ mayn't
If the string is "should", say yes. \ should not \ shouldn't
If the string is "was", say yes. \ was not \ wasn't
If the string is "will", say yes. \ will not \ won't
If the string is "would", say yes. \ would not \ wouldn't
If the string is "has", say yes. \ used in type definitions
If the string is "have", say yes. \ used in type definitions
If the string ends with "n't", say yes.
\ trouble makers
If the string is "begins", say yes. \ does not begin \ doesn't begin
If the string is "ends", say yes. \ does not end \ doesn't end
If the string is "looks", say yes. \ does not look \ doesn't look
If the string is "needs", say yes. \ does not need \ doesn't need
If the string is "starts", say yes. \ does not start \ doesn't start
Say no.

To decide if a string is any preposition:
If the string is "about", say yes.
If the string is "above", say yes.
If the string is "across", say yes.
If the string is "after", say yes.
If the string is "against", say yes.
If the string is "all", say yes.
If the string is "alone", say yes.
If the string is "along", say yes.
If the string is "among", say yes.
If the string is "any", say yes.
If the string is "anywhere", say yes.
If the string is "around", say yes.
If the string is "as", say yes.
If the string is "at", say yes.
If the string is "away", say yes.
If the string is "back", say yes.
If the string is "backward", say yes.
If the string is "backwards", say yes.
If the string is "before", say yes.
If the string is "beginning", say yes.
If the string is "behind", say yes.
If the string is "below", say yes.
If the string is "beneath", say yes.
If the string is "beside", say yes.
If the string is "between", say yes.
If the string is "beyond", say yes.
If the string is "bigger", say yes.
If the string is "by", say yes.
If the string is "close", say yes.
If the string is "deep", say yes.
If the string is "diagonally", say yes.
If the string is "down", say yes.
If the string is "downward", say yes.
If the string is "ending", say yes.
If the string is "everywhere", say yes.
If the string is "except", say yes.
If the string is "finishing", say yes.
If the string is "facing", say yes.
If the string is "for", say yes.
If the string is "forward", say yes.
If the string is "from", say yes.
If the string is "given", say yes.
If the string is "giving", say yes.
If the string is "high", say yes.
If the string is "in", say yes.
If the string is "inside", say yes.
If the string is "into", say yes.
If the string is "larger", say yes.
If the string is "leaning", say yes.
If the string is "left", say yes.
If the string is "leftward", say yes.
If the string is "leftways", say yes.
If the string is "like", say yes.
If the string is "limiting", say yes.
If the string is "long", say yes.
If the string is "near", say yes.
If the string is "of", say yes.
If the string is "off", say yes.
If the string is "on", say yes.
If the string is "only", say yes.
If the string is "onto", say yes.
If the string is "out", say yes.
If the string is "outside", say yes.
If the string is "over", say yes.
If the string is "past", say yes.
If the string is "pointing", say yes.
If the string is "returning", say yes.
If the string is "right", say yes.
If the string is "rightward", say yes.
If the string is "rightways", say yes.
If the string is "shorter", say yes.
If the string is "sideway", say yes.
If the string is "sideways", say yes.
If the string is "similar", say yes.
If the string is "smaller", say yes.
If the string is "somewhere", say yes.
If the string is "slantwise", say yes.
If the string is "slantway", say yes.
If the string is "slantways", say yes.
If the string is "starting", say yes.
If the string is "tall", say yes.
If the string is "taller", say yes.
If the string is "thru", say yes.
If the string is "through", say yes.
If the string is "throughout", say yes.
If the string is "to", say yes.
If the string is "toward", say yes.
If the string is "towards", say yes.
If the string is "under", say yes.
If the string is "underneath", say yes.
If the string is "until", say yes.
If the string is "unto", say yes.
If the string is "up", say yes.
If the string is "upward", say yes.
If the string is "upon", say yes.
If the string is "using", say yes.
If the string is "via", say yes.
If the string is "while", say yes.
If the string is "wide", say yes.
If the string is "with", say yes.
If the string is "within", say yes.
If the string is "without", say yes.
Say no.

To decide if a string is any negative word:
If the string is "not", say yes.
If the string is "cannot", say yes.
If the string is "nothing", say yes.
If the string ends with "n't", say yes.
Say no.

The compiler looks for "negative words" in conditional statements, removes them,
and then calls a "positive" decider routine and reverses the result.
For example, when the compiler finds this statement...

"If the string is not any negative word, beep."

...it will remove the "not" and match the rest to the above routine;
then it will generate machine code to make the call, with added machine code to reverse the boolean result.

Please replace the quoted words (like "are" and "be" and "not") in the routines above with appropriate Spanish equivalents,
where possible. I will then paste them into the SAL-1001 and he will be a little older, and know more, and work better, than the SAL-1000.

Thanks,

Gerry

