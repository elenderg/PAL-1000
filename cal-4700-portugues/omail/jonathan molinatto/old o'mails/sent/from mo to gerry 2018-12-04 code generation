so long as you can get the device drivers running, then that's fine. you're right that readily
yeah, i don't know what to do about hardware. just because the chip is simple, that doesn't mean
we shouldn't use other commodity hardware on the board. we could use usb and hdmi chips and
just route them appropriately. lots of hobbyists do these kinds of things in one-off projects. i'm
sure we could figure it out.

we could also start with ps/2 and vga. no CRTs, though. too heavy.

i'm actually not worried about the code generation. i've done that bit a number of times in school
and goofy one-off projects. you have doubly-linked lists, so building a tree shouldn't be difficult.
i actually might write a red-black tree implementation and hashtable for fun (in CAL). i've done it
in ansi c, and that was ... fun ... yeah. 

once we have a tree, we have an AST, and then we can apply optimizing passes to the AST to simplify
and shrink the actual code that is output. we could use registers, but we'd still need optimizing passes
to ensure we're not clobbering register values we need later. i've both used llvm and done it by-hand
(a lifetime ago), so if i can find my notes or old projects, i can refresh myself.

i'm sure you know about all of that. and i don't think trees are difficult to explain to a 12-year-old.

i just had an idea for a vm simulator in CAL that has a window for the screen, a window for the
stack, a window for other flags, some buttons to step/pause/play/rewind the clock. that would
be pretty neat. 

peace,
mo

