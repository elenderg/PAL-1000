ream cal-3024
  page 12240 15840 1 1440
    text -1 0 0 -1 0 0 10800 14760 11520 15120 0 "page number" "osmosian" 360 "right" 0 0 0 yes
       "56"
    end
    text 0 0 0 -1 0 0 1440 2160 3600 2520 0 "" "osmosian" 360 "left" 0 0 0 yes
       "$56"
    end
    text 0 0 0 -1 0 0 3600 1440 10800 1800 0 "" "osmosian" 360 "left" 0 0 0 yes
       "push the 4-byte value in ebx onto the stack"
    end
    text 0 0 0 -1 0 0 1440 2520 3600 2880 0 "" "osmosian" 360 "left" 0 0 0 yes
       "$57"
    end
    text 0 0 0 -1 0 0 3600 1800 10800 2160 0 "" "osmosian" 360 "left" 0 0 0 yes
       "push the 4-byte value in ebp onto the stack"
    end
    text 0 0 0 -1 0 0 1440 3960 3600 4320 0 "" "osmosian" 360 "left" 0 0 0 yes
       "$58"
    end
    text 0 0 0 -1 0 0 3600 2160 10800 2520 0 "" "osmosian" 360 "left" 0 0 0 yes
       "push the 4-byte value in esi onto the stack"
    end
    text 0 0 0 -1 0 0 1440 4320 3600 4680 0 "" "osmosian" 360 "left" 0 0 0 yes
       "$5B"
    end
    text 0 0 0 -1 0 0 3600 2520 10800 2880 0 "" "osmosian" 360 "left" 0 0 0 yes
       "push the 4-byte value in edi onto the stack"
    end
    text 0 0 0 -1 0 0 1440 4680 3600 5040 0 "" "osmosian" 360 "left" 0 0 0 yes
       "$5D"
    end
    text 0 0 0 -1 0 0 3600 3960 10800 4320 0 "" "osmosian" 360 "left" 0 0 0 yes
       "pop 4 bytes off the stack and put them into eax"
    end
    text 0 0 0 -1 0 0 1440 5040 3600 5400 0 "" "osmosian" 360 "left" 0 0 0 yes
       "$5E"
    end
    text 0 0 0 -1 0 0 3600 4320 10800 4680 0 "" "osmosian" 360 "left" 0 0 0 yes
       "pop 4 bytes off the stack and put them into ebx"
    end
    text 0 0 0 -1 0 0 1440 5400 3600 5760 0 "" "osmosian" 360 "left" 0 0 0 yes
       "$5F"
    end
    text 0 0 0 -1 0 0 3600 4680 10800 5040 0 "" "osmosian" 360 "left" 0 0 0 yes
       "pop 4 bytes off the stack and put them into ebp"
    end
    text 0 0 0 -1 0 0 1440 5760 3600 6120 0 "" "osmosian" 360 "left" 0 0 0 yes
       "$C7C2 value"
    end
    text 0 0 0 -1 0 0 3600 5040 10800 5400 0 "" "osmosian" 360 "left" 0 0 0 yes
       "pop 4 bytes off the stack and put them into esi"
    end
    text 0 0 0 -1 0 0 1440 7200 3600 7560 0 "" "osmosian" 360 "left" 0 0 0 yes
       "$8D95 offset"
    end
    text 0 0 0 -1 0 0 3600 5400 10800 5760 0 "" "osmosian" 360 "left" 0 0 0 yes
       "pop 4 bytes off the stack and put them into edi"
    end
    text 0 0 0 -1 0 0 1440 7560 3600 7920 0 "" "osmosian" 360 "left" 0 0 0 yes
       "$8B95 offset"
    end
    text 0 0 0 -1 0 0 3600 5760 10800 6120 0 "" "osmosian" 360 "left" 0 0 0 yes
       "put the specified 4-byte value into edx"
    end
    text 0 0 0 -1 0 0 1440 7920 3600 8280 0 "" "osmosian" 360 "left" 0 0 0 yes
       "$8B12"
    end
    text 0 0 0 -1 0 0 3600 7200 10800 7560 0 "" "osmosian" 360 "left" 0 0 0 yes
       "put the contents of ebp plus the offset into edx"
    end
    text 0 0 0 -1 0 0 1440 12240 3600 12600 0 "" "osmosian" 360 "left" 0 0 0 yes
       "$E9 address"
    end
    text 0 0 0 -1 0 0 3600 7560 10800 7920 0 "" "osmosian" 360 "left" 0 0 0 yes
       "put the 4-byte value at (the address in ebp plus the offset) into edx"
    end
    text 0 0 0 -1 0 0 1440 14040 3600 14400 0 "" "osmosian" 360 "left" 0 0 0 yes
       "$FF15 address"
    end
    text 0 0 0 -1 0 0 3600 7920 10800 8280 0 "" "osmosian" 360 "left" 0 0 0 yes
       "put the 4-byte value at the address in edx into edx"
    end
    text 0 0 0 -1 0 0 1440 13320 3600 13680 0 "" "osmosian" 360 "left" 0 0 0 yes
       "$FF12"
    end
    text 0 0 0 -1 0 0 3600 12240 10800 12600 0 "" "osmosian" 360 "left" 0 0 0 yes
       "jump to the specified address"
    end
    text 0 0 0 -1 0 0 1440 13680 3600 14040 0 "" "osmosian" 360 "left" 0 0 0 yes
       "$E8 offset"
    end
    text 0 0 0 -1 0 0 3600 14040 10800 14400 0 "" "osmosian" 360 "left" 0 0 0 yes
       "call the routine whose address is at the specified address"
    end
    text 0 0 0 -1 0 0 1440 8280 3600 8640 0 "" "osmosian" 360 "left" 0 0 0 yes
       "$8995 offset"
    end
    text 0 0 0 -1 0 0 3600 13320 10800 13680 0 "" "osmosian" 360 "left" 0 0 0 yes
       "call the routine whose address is in edx"
    end
    text 0 0 0 -1 0 0 1440 6480 3600 6840 0 "" "osmosian" 360 "left" 0 0 0 yes
       "$8BE5"
    end
    text 0 0 0 -1 0 0 3600 13680 10800 14040 0 "" "osmosian" 360 "left" 0 0 0 yes
       "call the routine at the specified offset from the next instruction"
    end
    text 0 0 0 -1 0 0 1440 6840 3600 7200 0 "" "osmosian" 360 "left" 0 0 0 yes
       "$8BEC"
    end
    text 0 0 0 -1 0 0 3600 8280 10800 8640 0 "" "osmosian" 360 "left" 0 0 0 yes
       "put the value in edx into memory at (the addr in ebp plus the offset)"
    end
    text 0 0 0 -1 0 0 1440 14400 3600 14760 0 "" "osmosian" 360 "left" 0 0 0 yes
       "C2 value"
    end
    text 0 0 0 -1 0 0 3600 6480 10800 6840 0 "" "osmosian" 360 "left" 0 0 0 yes
       "put the contents of ebp into esp"
    end
    text 0 0 0 -1 0 0 1440 10800 3600 11160 0 "" "osmosian" 360 "left" 0 0 0 yes
       "$8185 offset value"
    end
    text 0 0 0 -1 0 0 3600 6840 10800 7200 0 "" "osmosian" 360 "left" 0 0 0 yes
       "put the contents of esp into ebp"
    end
    text 0 0 0 -1 0 0 1440 11880 3600 12240 0 "" "osmosian" 360 "left" 0 0 0 yes
       "$83F800"
    end
    text 0 0 0 -1 0 0 3600 14400 10800 14760 0 "" "osmosian" 360 "left" 0 0 0 yes
       "return popping the number of bytes specified by the 2-byte value"
    end
    text 0 0 0 -1 0 0 1440 12600 3600 12960 0 "" "osmosian" 360 "left" 0 0 0 yes
       "$0F84 address"
    end
    text 0 0 0 -1 0 0 3600 10800 10800 11160 0 "" "osmosian" 360 "left" 0 0 0 yes
       "add the value to the 4-bytes at (the addr in ebp plus the offset)"
    end
    text 0 0 0 -1 0 0 1440 8640 3600 9000 0 "" "osmosian" 360 "left" 0 0 0 yes
       "$8B02"
    end
    text 0 0 0 -1 0 0 3600 11880 10800 12240 0 "" "osmosian" 360 "left" 0 0 0 yes
       "compare eax to zero"
    end
    text 0 0 0 -1 0 0 1440 11520 3600 11880 0 "" "osmosian" 360 "left" 0 0 0 yes
       "$83F001"
    end
    text 0 0 0 -1 0 0 3600 12600 10800 12960 0 "" "osmosian" 360 "left" 0 0 0 yes
       "jump to the specified address if the equal flag is set"
    end
    text 0 0 0 -1 0 0 1440 6120 3600 6480 0 "" "osmosian" 360 "left" 0 0 0 yes
       "$B9 value"
    end
    text 0 0 0 -1 0 0 3600 8640 10800 9000 0 "" "osmosian" 360 "left" 0 0 0 yes
       "put the 4-byte value stored at the address currently in edx into edx"
    end
    text 0 0 0 -1 0 0 1440 3600 3600 3960 0 "" "osmosian" 360 "left" 0 0 0 yes
       "$6A00"
    end
    text 0 0 0 -1 0 0 3600 11520 10800 11880 0 "" "osmosian" 360 "left" 0 0 0 yes
       "exclusive-or eax with 1"
    end
    text 0 0 0 -1 0 0 1440 11160 3600 11520 0 "" "osmosian" 360 "left" 0 0 0 yes
       "$49"
    end
    text 0 0 0 -1 0 0 3600 6120 10800 6480 0 "" "osmosian" 360 "left" 0 0 0 yes
       "put the specified 4-byte value into ecx"
    end
    text 0 0 0 -1 0 0 1440 12960 3600 13320 0 "" "osmosian" 360 "left" 0 0 0 yes
       "$75 offset"
    end
    text 0 0 0 -1 0 0 3600 3600 10800 3960 0 "" "osmosian" 360 "left" 0 0 0 yes
       "push four zero bytes on the stack"
    end
    text 0 0 0 -1 0 0 1440 2880 3600 3240 0 "" "osmosian" 360 "left" 0 0 0 yes
       "$FF32"
    end
    text 0 0 0 -1 0 0 3600 11160 10800 11520 0 "" "osmosian" 360 "left" 0 0 0 yes
       "subtract 1 from the value in ecx"
    end
    text 0 0 0 -1 0 0 1440 3240 3600 3600 0 "" "osmosian" 360 "left" 0 0 0 yes
       "$66FF32"
    end
    text 0 0 0 -1 0 0 3600 12960 10800 13320 0 "" "osmosian" 360 "left" 0 0 0 yes
       "jump the offset number of bytes if the zero flag is not set"
    end
    text 0 0 0 -1 0 0 1440 9000 3600 9360 0 "" "osmosian" 360 "left" 0 0 0 yes
       "$0FB612"
    end
    text 0 0 0 -1 0 0 3600 2880 10800 3240 0 "" "osmosian" 360 "left" 0 0 0 yes
       "push the 4-byte value at the address in edx onto the stack"
    end
    text 0 0 0 -1 0 0 1440 9360 3600 9720 0 "" "osmosian" 360 "left" 0 0 0 yes
       "$C702 value"
    end
    text 0 0 0 -1 0 0 3600 3240 10800 3600 0 "" "osmosian" 360 "left" 0 0 0 yes
       "push the 2-byte value at the address in edx onto the stack"
    end
    text 0 0 0 -1 0 0 1440 9720 3600 10080 0 "" "osmosian" 360 "left" 0 0 0 yes
       "$8902"
    end
    text 0 0 0 -1 0 0 3600 9000 10800 9360 0 "" "osmosian" 360 "left" 0 0 0 yes
       "put the 1-byte value at the address in edx into edx (with zero fill)"
    end
    text 0 0 0 -1 0 0 1440 10080 3600 10440 0 "" "osmosian" 360 "left" 0 0 0 yes
       "$668902"
    end
    text 0 0 0 -1 0 0 3600 9360 10800 9720 0 "" "osmosian" 360 "left" 0 0 0 yes
       "put the specified 4-byte value into memory at the address in edx"
    end
    text 0 0 0 -1 0 0 1440 10440 3600 10800 0 "" "osmosian" 360 "left" 0 0 0 yes
       "$8802"
    end
    text 0 0 0 -1 0 0 3600 9720 10800 10080 0 "" "osmosian" 360 "left" 0 0 0 yes
       "put the 4-byte value in eax into memory at the address in edx"
    end
    text 0 0 0 -1 0 0 3600 10080 10800 10440 0 "" "osmosian" 360 "left" 0 0 0 yes
       "put the 2-byte value in eax into memory at the address in edx"
    end
    text 0 0 0 -1 0 0 3600 10440 10800 10800 0 "" "osmosian" 360 "left" 0 0 0 yes
       "put the 1-byte value in eax into memory at the address in edx"
    end
    text 0 0 0 -1 0 0 1440 1440 3600 1800 0 "" "osmosian" 360 "left" 0 0 0 yes
       "$53"
    end
    text 0 0 0 -1 0 0 1440 1800 3600 2160 0 "" "osmosian" 360 "left" 0 0 0 yes
       "$55"
    end
    text 0 0 0 -1 0 0 3600 720 10800 1080 0 "" "osmosian" 360 "left" 0 0 0 yes
       "push the 4-byte value in eax onto the stack"
    end
    text 0 0 0 -1 0 0 3600 1080 10800 1440 0 "" "osmosian" 360 "left" 0 0 0 yes
       "push the 4-byte value in edx onto the stack"
    end
    text 0 0 0 -1 0 0 1440 720 3600 1080 0 "title" "osmosian" 360 "left" 0 0 0 yes
       "$50"
    end
    text 0 0 0 -1 0 0 1440 1080 3600 1440 0 "" "osmosian" 360 "left" 0 0 0 yes
       "$52"
    end
  end
end
