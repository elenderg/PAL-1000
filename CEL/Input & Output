O número identificador do modo de dispositivo da impressora é um número identificador.
A área de impressão é um canvas.
A seta do mouse é um cursor.

\ Altere os diretórios se precisar
\ It is your responsibility to clean up the output.txt file.
A pasta de saída é um endereço da pasta igual a "C:\output\".
O arquivo de saída é um endereço completo igual a "C:\output\output.txt".

Etapas para que se escreva um número para o fluxo de saída:
  Preserve o número.
  Converta o número para uma string.
  Escreva a string para o console.
  Escreva a string para o arquivo de saída.

Etapas para que se escreva um número para o fluxo de saída sem pular linhas:
  Preserve o número.
  Converta o número para uma string.
  Escreva a string para o console sem passar pra próxima linha.
  Escreva a string para o arquivo de saída sem passar pra próxima linha.

Etapas para que se escreva uma string para o fluxo de saída:
  Escreva a string para o console.
  Escreva a string para o arquivo de saída.

Etapas para que se escreva uma string para o arquivo de saída:
  Se a pasta de saída não estiver no sistema de arquivos, crie a pasta de saída no sistema de arquivos.
  Se o arquivo de saída não estiver no sistema de arquivos, crie o arquivo de saída no sistema de arquivos.
  Read o arquivo de saída para um trecho.
  Acrescente a string junto com o texto CRLF para o trecho.
  Grave o trecho para o arquivo de saída.

Etapas para que se escreva uma string para o arquivo de saída sem passar pra próxima linha:
  Se a pasta de saída não estiver no sistema de arquivos, crie a pasta de saída no sistema de arquivos.
  Se o arquivo de saída não estiver no sistema de arquivos, crie o arquivo de saída no sistema de arquivos.
  Read o arquivo de saída para um trecho.
  Acrescente a string para o trecho.
  Grave o trecho para o arquivo de saída.

Etapas para que se escreva uma string para a pasta de saída sem passar pra próxima linha:
  Escreva a string para o console sem passar pra próxima linha.
  Escreva a string para o arquivo de saída sem passar pra próxima linha.

Etapas para que se insira quebra de linha em um trecho:
  Acrescente o retorno de carro para o trecho.
  Acrescente a quebra de linha para o trecho.

Etapas para que se insira quebra de linha em um trecho (duas vezes):
  Insira quebra de linha no trecho.
  Insira quebra de linha no trecho.

Etapas para que se copie a entrada padrão para um trecho;
Etapas para que se copie o conteúdo da entrada padrão para um trecho;
Etapas para que se atribua a entrada padrão para um trecho;
Etapas para que se atribua o fluxo de entrada padrão para um trecho;
Etapas para que se atribua o conteúdo da entrada padrão para um trecho;
Etapas para que se atribua stdin para um trecho:
  Limpe o erro do fluxo de entrada/saída.
  Limpe o trecho.
  Encontre uma string usando o environment variáveis e "CONTENT_LENGTH".
  Se a string estiver em branco, atribua "Ocorreu um erro na hora de obter o conteúdo de comprimento CONTENT_LENGTH." ao erro do fluxo de entrada/saída; retorne.
  Converta a string para uma quantidade de caracteres.
  Se a quantidade de caracteres for 0, retorne.
  Reaponte o caractere inicial deste trecho usando a quantidade de caracteres.
  Processe "kernel32.dll" "ReadFile" com \Lê dados do arquivo especificado ou dispositivo de entrada / saída (E / S).
  \ Documentação: -> https://learn.microsoft.com/pt-br/windows/win32/api/fileapi/nf-fileapi-readfile
    O número identificador do fluxo de entrada padrão [hFile]
    e O caractere inicial deste trecho [lpBuffer] \ os dados a serem lidos de um arquivo ou dispositivo.
    e A quantidade de caracteres [nNumberOfBytesToRead]  \ O número (máximo) de bytes a serem lidos.
    e O endereçamento dum número [lpNumberOfBytesRead] \ O número de bytes lidos ao usar o parâmetro hFile síncrono.
    e nil. [lpOverlapped] \ Necessário se hFile foi aberto com FILE_FLAG_OVERLAPPED, caso contrário, pode ser NULL.
  \ Se a função for bem-sucedida, o valor retornado será não zero (TRUE).
  Se o número [lpNumberOfBytesRead] não for a quantidade de caracteres, atribua "Erro ao ler o fluxo de dados da entrada padrão (stdin)." ao erro do fluxo de entrada/saída; limpe o trecho; retorne.
  Atribua o caractere inicial deste trecho mais a quantidade de caracteres menos 1 ao caractere final deste trecho.

Etapas para que se leia uma string desde um console:
  Leia o console para a string.

Etapas para que se atualize o cursor:
  Crie um evento.
  Atribua "movimentação de cursor" à categoria deste evento.
  Se a tecla Alt estiver sendo pressionada, ative o detector de tecla Alt deste evento.
  Se a tecla Ctrl estiver sendo pressionada, ative o detector de tecla Ctrl deste evento.
  Se a tecla Shift estiver sendo pressionada, ative o detector de tecla Shift deste evento.
  Atribua a localização deste mouse à localização deste evento.
  Enfileire o evento.

Etapas para que se atribua um endereço completo para um trecho;
Etapas para que se carregue um endereço completo para um trecho;
Etapas para que se leia um endereço completo para um trecho:
  Limpe o erro do fluxo de entrada/saída.
  Preserve o endereço completo.
  Anexe o caractere NULL após o endereço completo.
  Se o endereço completo não estiver no sistema de arquivos, atribua "O Arquivo: '" junto com o endereço completo seguido de "' não existe." ao erro do fluxo de entrada/saída; retorne.
  \ abrae o endereço completo para modo de leitura/gravação.
  Processe "kernel32.dll" "CreateFileA" com \Cria ou abre um arquivo ou dispositivo de E/S.
  \ Documentação: -> https://learn.microsoft.com/pt-br/windows/win32/api/fileapi/nf-fileapi-createfilea
    O caractere inicial deste endereço completo [lpFileName] \ O nome do arquivo ou dispositivo a ser criado ou aberto.
    \Você pode usar barras (/) ou barras invertidas (\) neste nome.
    e -2147483648 [dwDesiredAccess = GENERIC_READ] \GENERIC_READ = Acesso de leitura
    e 3 [dwShareMode = FILE_SHARE_READ+FILE_SHARE_WRITE] \O modo de compartilhamento solicitado do arquivo ou dispositivo, que pode ser lido, escrito, ambos, excluir, todos estes ou nenhum
    \FILE_SHARE_READ = 0x00000001 Ativa operações subsequentes de abertura em um arquivo ou dispositivo para solicitar acesso de leitura.
    \FILE_SHARE_WRITE x00000002 Ativa operações subsequentes de abertura em um arquivo ou dispositivo para solicitar acesso de gravação.
    e 0 [lpSecurityAttributes] \Um ponteiro para uma estrutura SECURITY_ATTRIBUTES
    \ Documentação: -> https://learn.microsoft.com/pt-br/previous-versions/windows/desktop/legacy/aa379560(v=vs.85)
    e 3 [dwCreationDisposition = OPEN_EXISTING] \ OPEN_EXISTING 3  Abre um arquivo ou dispositivo, apenas se existir.
    e 0 [dwFlagsAndAttributes] \Os atributos e sinalizadores de arquivo ou dispositivo
    e 0 [hTemplateFile] \Um identificador válido de um arquivo de modelo com o direito de acesso GENERIC_READ. Este parâmetro pode ser NULL.
  Retornando um número identificador. \Se a função for bem-sucedida, o valor de retorno será um identificador aberto para o arquivo, dispositivo, canal nomeado ou slot de correio especificado.
    \Se a função falhar, o valor de retorno é INVALID_HANDLE_VALUE.
  Se o número identificador for -1 [INVALID_HANDLE_VALUE], atribua "Erro ao tentar abrir o arquivo: '" junto com o endereço completo seguido de "'." ao erro do fluxo de entrada/saída; retorne.
  Processe "kernel32.dll" "GetFileSize" com \ Recupera o tamanho do arquivo especificado, em bytes.
  \ Documentação: -> https://learn.microsoft.com/pt-br/windows/win32/api/fileapi/nf-fileapi-getfilesize
    O número identificador [hFile] \ O número identificador do arquivo.
    e nil [lpFileSizeHigh] \ Dword de ordem superior que armazena o tamanho do arquivo. Pode ser NULL
  Retornando um tamanho. \ Se a função for bem-sucedida, o valor de retorno será a palavra dupla de ordem inferior do tamanho do arquivo e,
    \se lpFileSizeHigh for diferente de NULL, a função colocará a palavra dupla de ordem superior do tamanho do arquivo na variável apontada por aquele parâmetro.
  Reaponte o caractere inicial deste trecho usando o tamanho.
  Atribua o caractere inicial deste trecho mais o tamanho menos 1 ao caractere final deste trecho.
  Processe "kernel32.dll" "ReadFile" com \Lê dados do arquivo especificado ou dispositivo de entrada / saída (E / S).
  \ Documentação: -> https://learn.microsoft.com/pt-br/windows/win32/api/fileapi/nf-fileapi-readfile
    O número identificador [hFile]  \Um identificador para o dispositivo
    e O caractere inicial deste trecho [lpBuffer] \ Os dados lidos de um arquivo ou dispositivo.
    e O tamanho [nNumberOfBytesToRead] \ O número máximo de bytes a serem lidos.
    e O endereçamento dum número [lpNumberOfBytesRead] \ O número de bytes lidos ao usar um parâmetro hFile síncrono.
    e 0 [lpOverlapped] \Um ponteiro para uma estrutura OVERLAPPED. Necessário se o parâmetro hFile foi aberto com FILE_FLAG_OVERLAPPED, caso contrário, pode ser NULL.
  Retornando o número. \Se a função for bem-sucedida, o valor de retorno será diferente de zero (VERDADEIRO).
  Processe "kernel32.dll" "CloseHandle" com \Fecha um identificador de objeto aberto.
  \Documentação: -> https://learn.microsoft.com/pt-br/windows/win32/api/handleapi/nf-handleapi-closehandle
    o número identificador.[hObject] \O identificador do arquivo aberto.
  Se o número não for 0, retorne.
  Atribua "Ocorreu um erro ao tentar ler o arquivo: " junto com o endereço completo seguido de "." ao erro do fluxo de entrada/saída.

Etapas para que se atribua um endereço completo para uma imagem;
Etapas para que se carregue um endereço completo para uma imagem;
Etapas para que se leia um endereço completo para uma imagem:
  Leia o endereço completo para um trecho.
  Se o erro do fluxo de entrada/saída não estiver em branco, esvazie a imagem; retorne.
  Crie a imagem usando o trecho.

Etapas para que se obtenha um texto retornado desde um terminal;
Etapas para que se leia um texto retornado desde um terminal:
  Se o terminal for inexistente, limpe o texto retornado; retorne.
  Desmanche todos os eventos.
  Limpe o texto retornado deste terminal.
  Adicione um quora para o terminal.
  Atribua "> " à string deste quora. \ isso aqui pode ajudar
  Atribua a input cor deste terminal à cor deste quora.
  Mostre o terminal.
  Execute alguns eventos usando o terminal.
  \ mostre o terminal.
  Atribua o texto retornado deste terminal ao texto retornado.
  Remova algum leading noise desde o texto retornado.
  Remova algum caractere ignorável final desde o texto retornado.
  Desmanche todos os eventos.
  \ questionable below
  Crie um evento.
  Atribua "clique do botão esquerdo" à categoria deste evento.
  Atribua a localização deste mouse à localização deste evento.
  Enfileire o evento.
  Atualize o cursor.

Etapas para que se obtenha um detector desde um console;
Etapas para que se leia um detector desde um console:
  Leia uma string desde o console.
  Converta a string para o detector.

Etapas para que se obtenha uma fração desde um console;
Etapas para que se leia uma fração desde um console:
  Leia uma string desde o console.
  Converta a string para a fração.

Etapas para que se obtenha um número desde um console;
Etapas para que se leia um número desde um console:
  Leia uma string desde o console.
  Converta a string para o número.

Etapas para que se carregue um arquivo para um trecho;
Etapas para que se atribua um arquivo para um trecho;
Etapas para que se leia um arquivo para um trecho:
  Limpe o erro do fluxo de entrada/saída.
  Processe "kernel32.dll" "GetFileSize" com \ Recupera o tamanho do arquivo especificado, em bytes.
  \ Documentação: -. https://learn.microsoft.com/pt-br/windows/win32/api/fileapi/nf-fileapi-getfilesize
    O arquivo [hFile]
    e nil [lpFileSizeHigh] \ o tamanho do arquivo. Pode ser NULL
  Retornando um tamanho. \ o valor de retorno é o tamanho do arquivo
  Reaponte o caractere inicial deste trecho usando o tamanho.
  Atribua o caractere inicial deste trecho mais o tamanho menos 1 ao caractere final deste trecho.
  Processe "kernel32.dll" "ReadFile" com \ Lê dados do arquivo especificado ou dispositivo de entrada/saída (E/S).
  \ Documentação: -> https://learn.microsoft.com/pt-br/windows/win32/api/fileapi/nf-fileapi-readfile
    O arquivo [hFile]
    e O caractere inicial deste trecho [lpBuffer] \ a string que vai armazenar o conteúdo do arquivo
    e O tamanho [nNumberOfBytesToRead] \ O número máximo de bytes a serem lidos.
    e O endereçamento dum número [lpNumberOfBytesRead] \ Um ponteiro para a variável que recebe o número de bytes lidos ao usar um parâmetro hFile síncrono.
    e 0 [lpOverlapped] \ Necessário se o parâmetro hFile foi aberto com FILE_FLAG_OVERLAPPED, caso contrário, pode ser NULL.
    \ Documentação: -> https://learn.microsoft.com/pt-br/windows/win32/api/minwinbase/ns-minwinbase-overlapped
  Retornando um número resultante. \Se a função for bem-sucedida, o valor de retorno será diferente de zero (VERDADEIRO).
  Se o número resultante for 0, atribua "Ocorreu um erro ao tentar ler o arquivo." ao erro do fluxo de entrada/saída; retorne.

Etapas para que se obtenha a Bíblia;
Etapas para que se abra a Bíblia;
Etapas para que se carregue a Bíblia;
Etapas para que se leia a Bíblia:
  Se a Bíblia não for inexistente, retorne.
  Extraia um endereço da pasta desde o endereço completo deste módulo.
  Itere. [o código a seguir]
    Se o endereço da pasta estiver em branco, retorne.
    Atribua o endereço da pasta seguido de "Bíblia.txt" para um endereço completo.
    Se o endereço completo estiver no sistema de arquivos, leia a Bíblia usando o endereço completo; retorne.
    Extraia o endereço da pasta desde o endereço da pasta.
  Reitere. [Execute novamente o código]

Etapas para que se leia a Bíblia usando um endereço completo:
  Se o Bíblia não for inexistente, retorne.
  Leia o endereço completo para um trecho.
  Se o erro do fluxo de entrada/saída não estiver em branco, retorne.
  Aloque memória para o Bíblia.
  Lance um percorredor sobre o trecho.
  Itere. [o código a seguir]
    Se o segmento final deste percorredor estiver em branco, retorne.
    Aloque memória para um versículo.
    Acrescente o versículo para os versículos desta Bíblia.
    Mova o percorredor (usando diretrizes de arquivos de texto).
    Atribua o segmento inicial deste percorredor à string deste versículo.
    Remova algum leading noise desde a string deste versículo.
    Remova algum caractere ignorável final desde a string deste versículo.
  Reitere. [Execute novamente o código]

Etapas para que se obtenha um byte desde um console;
Etapas para que se leia um byte desde um console:
  Leia uma string desde o console.
  Se a string estiver em branco, atribua o caractere null ao byte; retorne.
  Atribua o conteúdo deste caractere inicial desta string ao byte.

Etapas para que se atribua um console para uma string;
Etapas para que se leia um console para uma string:
  Se o console for inexistente, limpe a string; retorne.
  Desmanche todos os eventos.
  Limpe o texto retornado deste console.
  Mostre o console.
  Execute alguns eventos usando o console.
  Atribua o texto retornado deste console à string.
  Desmanche todos os eventos.
  Atualize o cursor.

Etapas para que se atribua a localização deste mouse para uma localização:
  Processe "user32.dll" "GetCursorPos" com \ Recupera a posição do cursor do mouse, retornando as coordenadas da tela.
  \ Documentação: -> https://learn.microsoft.com/pt-br/windows/win32/api/winuser/nf-winuser-getcursorpos
    O endereçamento desta localização. [lpPoint] \ Uma estrutura POINT que contém as coordenadas da tela do cursor.
    \ Documentação: -> https://learn.microsoft.com/pt-br/windows/win32/api/windef/ns-windef-point
  Processe "user32.dll" "ScreenToClient" com \ Converte as coordenadas de um ponto na tela  em coordenadas da área do cliente.
  \ Documentação: -> https://learn.microsoft.com/pt-br/windows/win32/api/winuser/nf-winuser-screentoclient
    A janela principal do programa [hWnd] \ A janela cuja área do cliente será usada para a conversão.
    e O endereçamento desta localização. \ Necessário caso a janela esteja em um segundo monitor.
  Processe "gdi32.dll" "DPtoLP" com \ Converte as coordenadas do dispositivo em coordenadas lógicas.
  \ Documentação: -> https://learn.microsoft.com/pt-br/windows/win32/api/wingdi/nf-wingdi-dptolp
    O canvas da tela [hdc] \ Um identificador para o contexto do dispositivo.
    e O endereçamento desta localização [lppt]
    e 1. [c] \ O número de pontos na matriz.

Etapas para que se abra um arquivo usando um endereço completo e uns milissegundos:
  Start um temporizador.
  Itere. [o código a seguir]
    Abra o arquivo usando o endereço completo.
    Se o erro do fluxo de entrada/saída estiver em branco, retorne.
    Se os intervalos deste temporizador forem greater do que os milissegundos, retorne.
  Reitere. [Execute novamente o código]

Etapas para que se abra um arquivo usando um endereço completo:
  Limpe o erro do fluxo de entrada/saída.
  Extraia um endereço da pasta desde o endereço completo.
  Se o endereço da pasta não estiver no sistema de arquivos, atribua "A Pasta: " junto com o endereço da pasta seguido de " não existe." ao erro do fluxo de entrada/saída; retorne.
  Ative o endereço completo para modo de leitura&gravação.
  Preserve o endereço completo.
  Anexe o caractere NULL após o endereço completo.
  Processe "kernel32.dll" "CreateFileA" com \ Também serve pra abrir um arquivo
    O caractere inicial deste endereço completo  [lpFileName]
    e -1073741824 [dwDesiredAccess = GENERIC_READ+GENERIC_WRITE]
    e 0 [dwShareMode]
    e 0 [lpSecurityAttributes]
    e 4 [dwCreationDisposition = OPEN_ALWAYS] \ OPEN_ALWAYS Abre um arquivo, sempre.
    e -2147483520 [dwFlagsAndAttributes = FILE_FLAG_WRITE_THROUGH ou FILE_ATTRIBUTE_NORMAL]
    e 0 [hTemplateFile] \Ao abrir um arquivo existente, CreateFile ignora este parâmetro
  Retornando o arquivo. \Se a função falhar, o valor de retorno é -1 (INVALID_HANDLE_VALUE).
  Se o arquivo for -1 [INVALID_HANDLE_VALUE], atribua "Erro ao abrir o arquivo: " junto com o endereço completo seguido de "." ao erro do fluxo de entrada/saída; retorne.

O módulo é uma estrutura com
  Um número identificador,
  Um endereço completo,
  Um endereço da pasta,
  Um root endereço da pasta, \ uma pasta acima do qual o exe está sendo executado. exemplo: C:\1\2\a.exe o endereço seria c:\1\
  Um nome do arquivo s/ extensão denominado nome.

O mouse é uma estrutura com
  Uma tecla denominado botão esquerdo,
  Uma tecla denominado botão direito.
  \ e uma tecla denominada roda do mouse.
