Um query pedaço é um texto de consulta.
Um texto de consulta é uma string.

Etapas para que se read uma response string desde uma requisição WinHTTP:
  Se a requisição WinHTTP for inexistente, cancele.
  Limpe a response string.
  Atribua 8 kilobytes a um trecho size.
  Percorra. [o código abaixo]
    Atribua 0 a um size.
    Call "WinHTTP.dll" "WinHttpqueryDataAvailable" com \ https://docs.microsoft.com/en-us/windows/win32/api/winhttp/nf-winhttp-winhttpquerydataavailable
    \ A função WinHttpQueryDataAvailable retorna a quantidade de dados, em bytes, disponíveis para serem lidos pela função WinHttpReadData.
      O número identificador de requisição desta requisição WinHTTP [hRequest] \ Um identificador de HINTERNET válido retornado por WinHttpOpenRequest. 
      \ https://docs.microsoft.com/en-us/windows/win32/winhttp/hinternet-handles-in-winhttp
      \WinHttpReceiveResponse deve ter sido chamado para este identificador e concluído antes de WinHttpQueryDataAvailable ser chamado.
      e O endereçamento deste size [lpdwNumberOfBytesAvailable] \ Um ponteiro para uma variável que recebe o número de bytes disponíveis.
      devolvendo um número resultante. \ Retorna TRUE se a função for bem-sucedida ou FALSE caso contrário.
    Se o número resultante for 0 [FALSE], atribua "Erro. Não foi possível verificar a quantidade de dados disponíveis." ao erro do fluxo de entrada/saída; limpe a response string; pare.
    Atribua a quantidade de caracteres desta response string a uma quantidade de caracteres armazenados.
    Reassign o caractere inicial desta response string usando a quantidade de caracteres armazenados mais o trecho size.
    Atribua o caractere inicial desta response string mais a quantidade de caracteres armazenados a um endereço de memória.
    Call "WinHTTP.dll" "WinHttpReadData" com \ https://docs.microsoft.com/en-us/windows/win32/api/winhttp/nf-winhttp-winhttpreaddata
    \ A função WinHttpReadData lê dados de um identificador aberto pela função WinHttpOpenRequest.
      O número identificador de requisição desta requisição WinHTTP [hRequest] \ Um identificador de HINTERNET válido retornado por WinHttpOpenRequest. 
      \ https://docs.microsoft.com/en-us/windows/win32/winhttp/hinternet-handles-in-winhttp
      e O endereço de memória [lpBuffer] \ Ponteiro para um buffer que recebe os dados lidos.
      e O trecho size [dwNumberOfBytesToRead] \ valor que contém o número de bytes a serem lidos.
      e O endereçamento dessa contagem [lpdwNumberOfBytesRead] \ Ponteiro para uma variável que recebe o número de bytes lidos.
      devolvendo o número resultante. \ Retorna TRUE se for bem-sucedido ou FALSE caso contrário.
    Se o número resultante for 0 [FALSE], atribua "Ocorreu um erro ao ler os dados da requisição WinHTTP." ao erro do fluxo de entrada/saída; limpe o response; pare.
    Atribua o endereço de memória mais a contagem menos 1 ao caractere final desta response string.
    Se a contagem for 0, pare.
  Repita. [o código acima]

Etapas para que se read uma URL para um trecho:
  \ prepare
  Limpe o trecho.
  Limpe o erro do fluxo de entrada/saída.
  \ internet abra
  Call "wininet.dll" "InternetOpenA" com \ https://docs.microsoft.com/en-us/windows/win32/api/wininet/nf-wininet-internetopena
  \ A função InternetOpenA inicializa o uso das funções WinINet de um aplicativo.
    O caractere inicial deste nome deste module [lpszAgent] \ Ponteiro para uma string terminada em nulo que especifica o nome do aplicativo ou entidade que chama as funções WinINet. 
    \Este nome é usado como o agente do usuário no protocolo HTTP.
    e 0 [dwAccessType = INTERNET_OPEN_TYPE_PRECONFIG] \ Tipo de acesso solicitado.
    \INTERNET_OPEN_TYPE_PRECONFIG = Recupera o proxy ou a configuração diretamente do registro.
    e nil [lpszProxy] \ Ponteiro para uma string terminada em nulo 
    \que especifica o nome do (s) servidor (es) proxy a ser usado quando o acesso ao proxy é especificado, definindo dwAccessType como INTERNET_OPEN_TYPE_PROXY. 
    \Se dwAccessType não estiver definido como INTERNET_OPEN_TYPE_PROXY, este parâmetro será ignorado e deverá ser NULL.
    e nil [lpszProxyBypass] \ Ponteiro para uma string terminada em nulo 
    \que especifica uma lista opcional de nomes de host ou endereços IP, ou ambos, 
    \que não devem ser roteados por meio do proxy quando dwAccessType é definido como INTERNET_OPEN_TYPE_PROXY. 
    \Se dwAccessType não estiver definido como INTERNET_OPEN_TYPE_PROXY, este parâmetro será ignorado e deverá ser NULL.
    [e  dwFlags e] \ Opções -> verificar se não é isso que tá dando bug no monet.
    devolvendo um número identificador da URL da internet. \ Retorna um identificador válido que o aplicativo passa para as funções WinINet subsequentes. 
    \Se InternetOpen falhar, ele retornará NULL.
  Se o número identificador da URL da internet for 0 [NULL], atribua "Erro. Não foi possível se conectar à internet. Verifique sua conexão" ao erro do fluxo de entrada/saída; volte.
 \ internet abra URL
  Isole a URL.
  Termine com o caractere NULL a URL.
  Call "wininet.dll" "InternetOpenUrlA" com \ https://docs.microsoft.com/en-us/windows/win32/api/wininet/nf-wininet-internetopenurla
  \ Abre um recurso especificado por uma URL FTP/HTTP completa.
    O número identificador da URL da internet [hInternet] \ O identificador para a sessão atual da Internet. 
    \Esse identificador pode ser obtido através da função InternetOpenA.
    e O caractere inicial desta URL [lpszUrl] \ Um ponteiro para uma variável de string terminada em nulo que especifica a URL para iniciar a leitura. 
    \Apenas URLs começando com ftp: , http: ou https: são suportadas.
    e nil [lpszHeaders] \ Um ponteiro para uma string terminada em nulo que especifica os cabeçalhos a serem enviados ao servidor HTTP. 
    \Para obter mais informações, consulte https://docs.microsoft.com/en-us/windows/win32/api/wininet/nf-wininet-httpsendrequesta
    e 0 [dwHeadersLength] \ O tamanho dos cabeçalhos adicionais, em TCHARs. 
    \Se este parâmetro for -1L e lpszHeaders não for NULL, lpszHeaders será considerado terminado em zero (ASCIIZ) e o comprimento será calculado.
    e 0 [dwFlags] \ Opções extras
    e 0 [dwContext] \ Um ponteiro para uma variável que especifica o valor definido pelo aplicativo que é passado, junto com o identificador retornado, para qualquer função de retorno de chamada.
    devolvendo um número identificador da URL. \ Retorna um identificador válido para a URL se a conexão for estabelecida com sucesso ou NULL se a conexão falhar.
  Se o número identificador da URL for 0 [NULL], atribua "Erro. Não foi possível abrir a seguinte URL: " junto com o URL seguido de "." ao erro do fluxo de entrada/saída; 
    Call "wininet.dll" "InternetCloseHandle" com \ https://docs.microsoft.com/en-us/windows/win32/api/wininet/nf-wininet-internetclosehandle
    \Fecha um identificador de Internet único.
      o número identificador da URL da internet; [hInternet] \ O identificador a ser fechado.
    volte.
  \ read o file
  Atribua 64 kilobytes a um trecho size.
  Percorra. [o código abaixo]
    Atribua a quantidade de caracteres deste trecho a uma quantidade de caracteres armazenados.
    Reassign o caractere inicial deste trecho usando a quantidade de caracteres armazenados mais o trecho size.
    Atribua o caractere inicial deste trecho mais a quantidade de caracteres armazenados a um endereço de memória.
    Call "wininet.dll" "InternetReadFile" com \ https://docs.microsoft.com/en-us/windows/win32/api/wininet/nf-wininet-internetreadfile
    \ Lê dados de um identificador aberto pela função InternetOpenUrl, FtpOpenFile ou HttpOpenRequest.
      O número identificador da URL [hFile] \Esse identificador é obtido através das funções InternetOpenUrl, FtpOpenFile ou HttpOpenRequest.
      e O endereço de memória [lpBuffer] \ Ponteiro para um buffer que recebe os dados.
      e O trecho size [dwNumberOfBytesToRead] \ Número de bytes a serem lidos.
      e O endereçamento dessa contagem [lpdwNumberOfBytesRead] \  Ponteiro para uma variável que recebe o número de bytes lidos. 
      \InternetReadFile define esse valor como zero antes de fazer qualquer trabalho ou verificação de erros.
      \ ver se está relacionado com Etapas para que se receive um trecho desde um socket:
      devolvendo um número resultante. \ Retorna TRUE se for bem-sucedido ou FALSE caso contrário.
    Se o número resultante for 0 [FALSE], atribua "Ocorreu um erro ao ler a seguinte URL: " junto com a URL seguido de "." ao erro do fluxo de entrada/saída; pare.
    Atribua o endereço de memória mais a contagem menos 1 ao caractere final deste trecho.
    Se a contagem for 0, pare.
  Repita. [o código acima]
  \ clean up
  Call "wininet.dll" "InternetCloseHandle" com \ https://docs.microsoft.com/en-us/windows/win32/api/wininet/nf-wininet-internetclosehandle
    \Fecha um identificador de Internet único.
    O número identificador da URL. [hInternet] \ O identificador a ser fechado.
  Call "wininet.dll" "InternetCloseHandle" com \ https://docs.microsoft.com/en-us/windows/win32/api/wininet/nf-wininet-internetclosehandle
    \Fecha um identificador de Internet único.
    O número identificador da URL da internet. [hInternet] \ O identificador a ser fechado.

Etapas para que se receive o response string desde uma requisição WinHTTP:
  Se a requisição WinHTTP for inexistente, cancele.
  Call "WinHTTP.dll" "WinHttpReceiveResponse" com \ https://docs.microsoft.com/en-us/windows/win32/api/winhttp/nf-winhttp-winhttpreceiveresponse
  \ A função WinHttpReceiveResponse espera receber a resposta a uma solicitação HTTP iniciada por WinHttpSendRequest.
    O número identificador de requisição desta requisição WinHTTP [hRequest] \ O Identificador de HINTERNET retornado por WinHttpOpenRequest e enviado por WinHttpSendRequest.
    e 0 [lpReserved] \ este parâmetro é reservado e deve ser NULL.
    devolvendo um número resultante. \ Retorna TRUE se for bem-sucedido ou FALSE caso contrário.
  Se o número resultante for 0 [FALSE], atribua "A resposta da solicitação HTTP não foi bem sucedida" ao erro do fluxo de entrada/saída; volte.

Etapas para que se receive um trecho desde um socket:
  Limpe o erro do fluxo de entrada/saída.
  Limpe o trecho.
  Atribua 8 kilobytes a um trecho size.
  Percorra. [o código abaixo]
    Atribua 0 a um size.
    Atribua a quantidade de caracteres deste trecho a uma quantidade de caracteres armazenados.
    Reassign o caractere inicial deste trecho usando a quantidade de caracteres armazenados mais o trecho size.
    Atribua o caractere inicial deste trecho mais a quantidade de caracteres armazenados a um endereço de memória.
    Call "ws2_32.dll" "recv" com \ https://docs.microsoft.com/en-us/windows/win32/api/winsock/nf-winsock-recv
    \ A função recv recebe dados de um soquete conectado ou um soquete vinculado sem conexão.
    \A função recv é usada para ler dados de entrada em soquetes orientados à conexão ou soquetes sem conexão.
      O socket [s] \ O descritor que identifica um soquete conectado.
      e O endereço de memória [*buf] \Um ponteiro para o buffer para receber os dados de entrada.
      e O trecho size [len] \O comprimento, em bytes, do buffer apontado pelo parâmetro buf.
      e 0 [flags] \Um conjunto de sinalizadores que influenciam o comportamento desta função. Veja as observações abaixo.
      \O parâmetro flags pode ser usado para influenciar o comportamento da invocação da função além das opções especificadas para o socket associado. 
      \A semântica desta função é determinada pelas opções de socket e o parâmetro flags.
      devolvendo uma contagem. \ CONTAGEM
      \Se nenhum erro ocorrer, recv retorna o número de bytes recebidos e o buffer apontado pelo parâmetro buf conterá esses dados recebidos. 
      \Se a conexão foi fechada normalmente, o valor de retorno é zero.
      \Caso contrário, um valor de SOCKET_ERROR é retornado
    Se a contagem não for -1 [SOCKET_ERROR], atribua o endereço de memória mais a contagem menos 1 ao caractere final deste trecho; volte.
    Se o último erro do windows sockets não for 10040 [WSAMSGSIZE], atribua "Ocorreu um erro no recebimento dos dados." ao erro do fluxo de entrada/saída; limpe o trecho; volte.
  \Se o last winsock erro desse system não for 10040 [WSAMSGSIZE], atribua "Ocorreu um erro no recebimento dos dados." ao erro do fluxo de entrada/saída; limpe o trecho; volte.
    Atribua o endereço de memória mais a contagem menos 1 ao caractere final deste trecho.
  Repita. [o código acima]

Etapas para que se post um data string para uma URL e receive um response string:
  \ só funciona com http e https
  Limpe o response string .
  Limpe o erro do fluxo de entrada/saída.
  Crie uma requisição WinHTTP por posting para o URL.
  Se o erro do fluxo de entrada/saída não estiver em branco, cancele.
  Send o data para a requisição WinHTTP.
  Se o erro do fluxo de entrada/saída não estiver em branco, destrua a requisição WinHTTP; volte.
  Receive o response string desde a requisição WinHTTP.
  Se o erro do fluxo de entrada/saída não estiver em branco, destrua a requisição WinHTTP; volte.
  Read o response string desde a requisição WinHTTP.
  Se o erro do fluxo de entrada/saída não estiver em branco, destrua a requisição WinHTTP; volte.
  Destrua a requisição WinHTTP.


