\ Obs: Para entender este arquivo você pode - e deve- consultara documentação da API Win32. Disponível em:
\ https://learn.microsoft.com/pt-br/windows/win32/api/

Um CLSID é um UUID. 
\Uma Class ID (CLSID) é um número de 128 bits que representa uma ID exclusiva para um aplicativo de software ou componente de aplicativo. 
\Elas são utilizadas para identificar componentes de software sem que seja preciso conhecer o "nome" desses componentes.

Um wParam é um número. \ Um dos parâmetro das mensagem dos programas do Windows.
\Corresponde a um valor numérico sem sinal de 32 ou 64 bits a depender da versão do windows. 
\ Usado por exemplo, para saber se a janela foi minimizada, maximizada ou redimensionada.

Um ABC é uma estrutura com \ Define a largura de um caractere em uma fonte TrueType.
\ Documentação: -> https://learn.microsoft.com/pt-br/windows/win32/api/wingdi/ns-wingdi-ABC  
  Um abcA, \ O espaçamento A é adicionado p/ fornecer um espaço em branco antes do caractere
  Um abcB, \ O espaçamento B é a largura do caractere.
  Um abcC.\ O espaçamento C é a distância adicionada p/ fornecer um espaço em branco à direita do caractere.
  \ A largura total de um caractere é a soma dos espaços A, B e C. O espaço A e o C podem ser negativos para indicar cavidades ou saliências.

Um pABC é um ponteiro [que aponta] para um ABC.

Um endereço do ABC é um ponteiro [que aponta] para um ABC.
 \ Documentação :-> https://learn.microsoft.com/pt-br/windows/win32/api/wingdi/ns-wingdi-ABC
  \ https://learn.microsoft.com/pt-br/windows/win32/api/wingdi/nf-wingdi-getcharabcwidthsa

Um abcA é um número. 
Um abcB é um número. 
Um abcC é um número. 

Um AddrInfo é uma estrutura com  \ Armazena informações de endereço de host.
\ Documentação: -> https://learn.microsoft.com/pt-br/windows/win32/api/ws2def/ns-ws2def-addrinfoa
  Um número denominado ai_Flags, \ Indicam opções usadas na função getaddrinfo.
  Um número denominado ai_Family, \A família do endereço, por exemplo IPv4, IPv6, NetBIOS, IrDA  ou  Bluetooth
  Um número denominado ai_SocketType, \ O tipo de soquete. Exemplo: fluxos de byte, datagramas,  soquetes brutos, e outros.   
  Um número denominado ai_Protocol, \ O tipo de protocolo. Exemplos: TCP, UDP, PGM e outros
  Um número denominado ai_AddrLen, \O comprimento, em bytes, do buffer apontado pelo membro ai_addr.
  Um endereço do caractere denominado ai_CanonName, \O nome canônico do host.
  Um SockAddrPtr denominado ai_Addr, \Um ponteiro para uma estrutura sockaddr. 
  Um AddrInfoPtr denominado ai_Next. \Um ponteiro para a próxima estrutura em uma listagem vinculada.   

Um AddrInfoPtr é um ponteiro [que aponta] para um AddrInfo.

Umas rotinas da função AddrInfo são uma estrutura com
  Um ponteiro da função GetAddrInfo, \ Documentação: -> https://learn.microsoft.com/pt-br/windows/win32/api/ws2tcpip/nf-ws2tcpip-getaddrinfo
  Um ponteiro da função FreeAddrInfo. \ Documentação: -> https://learn.microsoft.com/pt-br/windows/win32/api/ws2tcpip/nf-ws2tcpip-freeaddrinfo

Um ponteiro da função GetAddrInfo é um ponteiro.
Um ponteiro da função FreeAddrInfo é um ponteiro.

Uma Crypt Session é uma lista com \
  Um ponteiro denominado hCryptProv, \ Número identificador de CSPs.
  Um ponteiro denominado hCryptHash, \ Número identificador de objetos hash.
  Um ponteiro denominado hCryptKey. \ Número identificador de chaves criptográficas.

Um DEVMODE é uma estrutura com   \ Contém informações sobre a inicialização de uma impressora ou MONITOR.
\ Documentação: -> https://learn.microsoft.com/pt-br/windows/win32/api/wingdi/ns-wingdi-devmodea
  32 bytes denominados dmDeviceName,
  Uma word denominada dmSpecVersion,
  Uma word denominada dmDriverVersion,
  Uma word denominada dmSize,
  Uma word denominada dmDriverExtra,
  Um número denominado dmFields,
  Uma word denominada dmOrientation,
  Uma word denominada dmPaperSize,
  Uma word denominada dmPaperLength,
  Uma word denominada dmPaperWidth,
  Uma word denominada dmScale,
  Uma word denominada dmCopies,
  Uma word denominada dmDefaultSource,
  Uma word denominada dmPrintQuality,
  Uma word denominada dmColor,
  Uma word denominada dmDuplex,
  Uma word denominada dmYResolution,
  Uma word denominada dmTTOption,
  Uma word denominada dmCollate,
  32 bytes denominados dmFormName,
  Uma word denominada dmLogPixels,
  Um número denominado dmBitsPerPel,
  Um número denominado dmPelsWidth,
  Um número denominado dmPelsHeight,
  Um número denominado dmDisplayFlags,
  Um número denominado dmDisplayFrequency,
  Um número denominado dmICMMethod,
  Um número denominado dmICMIntent,
  Um número denominado dmMediaType,
  Um número denominado dmDitherType,
  Um número denominado dmReserved1,
  Um número denominado dmReserved2.

Um GcpResults é uma estrutura com \ contém informações sobre os caracteres em uma string.  recebe os resultados da função GetCharacterPlacement
\ Documentação: -> https://learn.microsoft.com/pt-br/windows/win32/api/wingdi/ns-wingdi-gcp_resultsa
  Um número denominado lStructSize,
  Um endereço do caractere denominado lpOutString,
  Um endereço numérico denominado lpOrder,
  Um endereço numérico denominado lpDX,
  Um endereço numérico denominado lpCaretPos,
  Um ponteiro denominado lpClass,
  Um ponteiro denominado lpGlyphs,
  Um número denominado nGlyphs,
  Um número denominado nMaxFit.

Um GdiplusStartupInput é uma estrutura com \contém os argumentos da função GdiplusStartup.
\ Documentação: -> https://learn.microsoft.com/pt-br/windows/win32/api/gdiplusinit/ns-gdiplusinit-gdiplusstartupinput  
  Um número denominado GdiplusVersion,
  Um ponteiro denominado DebugEventCallback,
  Um número denominado SuppressBackgroundThread,
  Um número denominado SuppressExternalCodecs.

Um In_Addr é uma estrutura com \ representa um endereço IPv4. -> Internet Adress
\ Documentação: -> https://learn.microsoft.com/pt-br/windows/win32/api/inaddr/ns-inaddr-In_Addr
  Um byte denominado s_b1, \ O endereço IPv4 do host formatado como quatro u_chars.
  Um byte denominado s_b2,
  Um byte denominado s_b3,
  Um byte denominado s_b4,
  Uma word [unsigned] denominado s_w1 sob o s_b1, \O endereço IPv4 do host formatado como dois u_shorts.
  Uma word [unsigned] denominado s_w2 sob o s_b3,
  Um número denominado s_addr sob o s_b1. \Endereço do host formatado como u_long.

Um istream é um ponteiro [que aponta] para um istream object.

Um istream object é uma estrutura com um istream vtable denominado vtable.

Um istream vtable é um ponteiro [que aponta] para um istream vtable conjunto.
  \Uma vtable (tabela de método virtual) é uma tabela de ponteiros de função. 
  \O vtable é como o COM vincula uma chamada de método à sua implementação em tempo de execução. N
  \Não por coincidência, vtables são a forma como a maioria dos compiladores C ++ implementa métodos virtuais.
  Um istream vtable conjunto é uma estrutura com
  \ iunknown 
  \ https://learn.microsoft.com/pt-br/windows/win32/api/objidl/nn-objidl-istream
  Um ponteiro denominado queryinterface,
  \ https://learn.microsoft.com/pt-br/windows/win32/com/queryinterface--navigating-in-an-object
  Um ponteiro denominado addref, \Incrementa a contagem de referência de um ponteiro de interface para um objeto COM. 
  Um ponteiro denominado release, \ Diminui a contagem de referência para uma interface em um objeto COM.\function(this:istream):number; stdcall;
  \ istream
  Um ponteiro denominado read,\O método Read lê um número especificado de bytes do objeto stream para a memória, começando no ponteiro de busca atual.
  Um ponteiro denominado write,\O método Write grava um número especificado de bytes no objeto de fluxo, começando no ponteiro de busca atual.
  Um ponteiro denominado seek, \Muda o ponteiro de busca para um novo local. O novo local é relativo ao início, ao final do fluxo ou ao ponteiro de busca atual.
  Um ponteiro denominado setsize, \Altera o tamanho do objeto de fluxo.
  Um ponteiro denominado copyto, \Copia um número especificado de bytes do ponteiro de busca atual no fluxo para o ponteiro de busca atual em outro fluxo.
  Um ponteiro denominado commit, \O método Commit garante que todas as alterações feitas em um objeto de fluxo aberto no modo transacionado sejam refletidas no armazenamento pai.
  Um ponteiro denominado revert, \O método Revert descarta todas as alterações feitas em um fluxo transacionado desde a última chamada IStream :: Commit. 
  \Em fluxos abertos em modo direto e fluxos usando a implementação de arquivo composto COM de IStream :: Revert, este método não tem efeito.
  Um ponteiro denominado lockregion, \O método LockRegion restringe o acesso a um intervalo especificado de bytes no fluxo.
  Um ponteiro denominado unlockregion,\O método UnlockRegion remove a restrição de acesso em um intervalo de bytes anteriormente restrito com IStream :: LockRegion.
  Um ponteiro denominado stat,\O método Stat recupera a estrutura STATSTG para este fluxo.
  Um ponteiro denominado clone. \O método Clone cria um novo objeto de fluxo com seu próprio ponteiro de busca que faz referência aos mesmos bytes que o fluxo original.

Um OUTLINETEXTMETRIC é uma estrutura com \ Descreve uma fonte TrueType.
\ Documentação: -> https://learn.microsoft.com/pt-br/windows/win32/api/wingdi/ns-wingdi-outlinetextmetrica
  Um número denominado otmSize,
  Um TEXTMETRIC denominado otmTextMetrics,
  3 bytes,
  Um byte denominado otmFiller,
  Um panose denominado otmPanoseNumber,
  1 byte,
  Um número denominado otmfsSelection,
  Um número denominado otmfsType,
  Um número denominado otmsCharSlopeRise,
  Um número denominado otmsCharSlopeRun,
  Um número denominado otmItalicAngle,
  Um número denominado otmEMSquare,
  Um número denominado otmAscent,
  Um número denominado otmDescent,
  Um número denominado otmLineGap,
  Um número denominado otmsCapEmHeight,
  Um número denominado otmsXHeight,
  Uma caixa denominado otmrcFontBox,
  Um número denominado otmMacAscent,
  Um número denominado otmMacDescent,
  Um número denominado otmMacLineGap,
  Um número denominado otmusMinimumPPEM,
  Uma localização denominado otmptSubscriptSize,
  Uma localização denominado otmptSubscriptOffset,
  Uma localização denominado otmptSuperscriptSize, 
  Uma localização denominado otmptSuperscriptOffset,
  Um número denominado otmsStrikeoutSize,
  Um número denominado otmsStrikeoutPosition,
  Um número denominado otmsUnderscoreSize,
  Um número denominado otmsUnderscorePosition,
  Um ponteiro denominado otmpFamilyName,
  Um ponteiro denominado otmpFaceName,
  Um ponteiro denominado otmpStyleName,
  Um ponteiro denominado otmpFullName.

Um PANOSE é uma estrutura com \ Descreve os valores de classificação de fonte PANOSE para uma fonte TrueType. 
\ Documentação: -> https://learn.microsoft.com/pt-br/windows/win32/api/wingdi/ns-wingdi-panose
  Um byte denominado bFamilyType,
  Um byte denominado bSerifStyle,
  Um byte denominado bWeight,
  Um byte denominado bProportion,
  Um byte denominado bContrast,
  Um byte denominado bStrokeVariation,
  Um byte denominado bArmStyle,
  Um byte denominado bLetterform,
  Um byte denominado bMidline,
  Um byte denominado bXHeight.

Um PRINTDLGEX é uma estrutura com \ Usado pela função PrintDlgEx usa para inicializar a folha de propriedades de impressão. 
\ https://learn.microsoft.com/pt-br/windows/win32/api/commdlg/ns-commdlg-printdlgexw
  Um número denominado lStructSize,
  Um janela do programa denominado hwndOwner,
  Um número identificador denominado hDevMode,
  Um número identificador denominado hDevNames,
  Um canvas denominado hDC,
  Um número denominado Flags,
  Um número denominado Flags2,
  Um número denominado ExclusionFlags,
  Um número denominado nPageRanges,
  Um número denominado nMaxPageRanges,
  Um ponteiro denominado lpPageRanges,
  Um número denominado nMinPage,
  Um número denominado nMaxPage,
  Um número denominado nCopies,
  Um número identificador denominado hInstance,
  Um ponteiro denominado lpPrintTemplateName,
  Um ponteiro denominado lpCallback,
  Um número denominado nPropertyPages,
  Um ponteiro denominado lphPropertyPages,
  Um número denominado nStartPage,
  Um número denominado dwResultAction.

Um SOCKADDR é uma estrutura com \ Especifica um endereço de transporte e uma porta para a família de endereços AF_INET.
\ Documentação: ->. https://learn.microsoft.com/pt-br/windows/win32/winsock/sockaddr-2
\ https://learn.microsoft.com/pt-br/windows/win32/api/ws2def/ns-ws2def-sockaddr_in
  Uma word denominada SIn_family, \-> Socket Internet Family
  Um word big-endian unsigned denominado SIn_Port, 
  Um In_Addr denominado SIn_addr, 
  8 bytes denominados SIn_zero. 

Um SockAddrPtr é um ponteiro [que aponta] para um SOCKADDR.

Um STARTUPINFO é uma estrutura com \Especifica a estação da janela, a área de trabalho, os identificadores padrão e a aparência da janela principal para um processo no momento da criação.
\ Documentação: -> https://learn.microsoft.com/pt-br/windows/win32/api/processthreadsapi/ns-processthreadsapi-startupinfoa  
  Um número denominado cb,
  Um ponteiro denominado lIsoled,\
  Um ponteiro denominado lpDesktop,\Consulte https://learn.microsoft.com/pt-br/windows/win32/winstation/thread-connection-to-a-desktop
  Um ponteiro denominado lpTitle, \Para processos de console apenas
  Um número denominado dwX,
  Um número denominado dwY,
  Um número denominado dwXSize,
  Um número denominado dwYSize,
  Um número denominado dwXCountChars,
  Um número denominado dwYCountChars,
  Um número denominado dwFillAttribute,
  Um número denominado dwFlags,
  Uma word denominada wShowWindow,
  Uma word denominada cbReserved2,
  Um ponteiro denominado lIsoled2,
  Um número identificador denominado hStdInput,\Consulte CreateWindowEx. https://learn.microsoft.com/pt-br/windows/win32/api/winuser/nf-winuser-createwindowexa
  Um número identificador denominado hStdOutput, 
  Um número identificador denominado hStdError.

Um SYSTEMTIME é uma estrutura com \Especifica uma data e hora, usando membros individuais para o mês, dia, ano, dia da semana, hora, minuto, segundo e milissegundo. 
\ Documentação: -> https://learn.microsoft.com/pt-br/windows/win32/api/minwinbase/ns-minwinbase-SYSTEMTIME
\A hora está na hora universal coordenada (UTC) ou na hora local, dependendo da função que está sendo chamada.
  Uma word denominada wYear, \ O ano. Os valores válidos para este membro são de 1601 a 30827.
  Uma word denominada wMonth, \ O mês. De 1 a 12
  Uma word denominada wDayOfWeek, \ O dia da semana. De 0 a 6, começando no Domingo
  Uma word denominada wDay, \ O dia do mês. De 1 a 31
  Uma word denominada wHour, \ A hora. de 0 a 23
  Uma word denominada wMinute, \ O minuto. De 0 a 59.
  Uma word denominada wSecond, \ O segundo. De 0 a 59.
  Uma word denominada wMilliseconds. \ O milissegundo. De 0 a 999.

Um talker vtable conjunto é uma estrutura com 
\ Documentação: ->  https://learn.microsoft.com/pt-br/previous-versions/windows/desktop/ee413476(v=vs.85)
  \ iunknown
  Um ponteiro denominado QueryInterface,\https://learn.microsoft.com/pt-br/previous-versions/windows/desktop/ms719854(v=vs.85)
  Um ponteiro denominado AddRef,
  Um ponteiro denominado Release, \ em this:pspvoice out número
  \ italker -.https://learn.microsoft.com/pt-br/previous-versions/windows/desktop/ms717961(v=vs.85)
  Um ponteiro denominado SetNotifySink,
  Um ponteiro denominado SetNotifyWindowMessage,
  Um ponteiro denominado SetNotifyCallbackFunction,
  Um ponteiro denominado SetNotifyCallbackInterface,
  Um ponteiro denominado SetNotifyWin32Event,
  Um ponteiro denominado WaitForNotifyEvent,
  Um ponteiro denominado GetNotifyEventHandle,\Recupera um identificador para um evento de notificação.
  \ https://learn.microsoft.com/pt-br/previous-versions/windows/desktop/ms717848(v=vs.85)
  Um ponteiro denominado SetInterest,
  Um ponteiro denominado GetEvents,
  Um ponteiro denominado GetInfo,
  Um ponteiro denominado SetOutput,
  Um ponteiro denominado GetOutputObjectToken,
  Um ponteiro denominado GetOutputStream,
  Um ponteiro denominado Pause,
  Um ponteiro denominado Resume,
  Um ponteiro denominado SetVoice,
  Um ponteiro denominado GetVoice,
  Um ponteiro denominado Speak, \ in this:pspvoice; pwcs:pwchar; dwflags:number; pulstreamnumber:pnumber out número
  Um ponteiro denominado SpeakStream,
  Um ponteiro denominado GetStatus,
  Um ponteiro denominado Skip,
  Um ponteiro denominado SetPriority,
  Um ponteiro denominado GetPriority,
  Um ponteiro denominado SetAlertBoundary,
  Um ponteiro denominado GetAlertBoundary,
  Um ponteiro denominado SetRate,
  Um ponteiro denominado GetRate,
  Um ponteiro denominado SetVolume,
  Um ponteiro denominado GetVolume,
  Um ponteiro denominado WaitUntilDone,
  Um ponteiro denominado SetSyncSpeakTimeout,
  Um ponteiro denominado GetSyncSpeakTimeout,
  Um ponteiro denominado SpeakCompleteEvent,
  Um ponteiro denominado IsUISupported,
  Um ponteiro denominado DisplayUI.

Um TEXTMETRIC é uma estrutura com \ Dados de uma fonte física. 
\ Documentação: -> https://learn.microsoft.com/pt-br/windows/win32/api/wingdi/ns-wingdi-textmetrica
  Um número denominado tmHeight,
  Um número denominado tmAscent,
  Um número denominado tmDescent,
  Um número denominado tmInternalLeading,
  Um número denominado tmExternalLeading,
  Um número denominado tmAveCharWidth,
  Um número denominado tmMaxCharWidth,
  Um número denominado tmWeight,
  Um número denominado tmOverhang,
  Um número denominado tmDigitizedAspectX,
  Um número denominado tmDigitizedAspectY,
  Um byte denominado tmFirstChar,
  Um byte denominado tmLastChar,
  Um byte denominado tmDefaultChar,
  Um byte denominado tmBreakChar,
  Um byte denominado tmItalic, 
  Um byte denominado tmUnderlined,
  Um byte denominado tmStruckOut,
  Um byte denominado tmPitchAndFamily,\Estrutura LOGFONT. https://learn.microsoft.com/pt-br/windows/desktop/api/wingdi/ns-wingdi-logfonta
 Um byte denominado tmCharSet.

Um URL_COMPONENTS é uma estrutura com \Contém os componentes de uma URL. 
\ Documentação: -> https://learn.microsoft.com/pt-br/windows/win32/api/WinHTTP/ns-WinHTTP-url_components
  \ Usada junto com as funções InternetCrackUrl e InternetCreateUrl.
  Um número denominado dwStructSize,
  Um endereço do caractere denominado lpszScheme,
  Um número denominado dwSchemeLength,
  Um número denominado nScheme, \ INTERNET_SCHEME -> https://learn.microsoft.com/pt-br/windows/win32/api/wininet/ne-wininet-internet_scheme
  Um endereço do caractere denominado lpszHostName,
  Um número denominado dwHostNameLength,
  Um número denominado nPort,
  Um endereço do caractere denominado lpszUserName,
  Um número denominado dwUserNameLength,
  Um endereço do caractere denominado lpszPassword,
  Um número denominado dwPasswordLength,
  Um endereço do caractere denominado lpszUrlPath,
  Um número denominado dwUrlPathLength,
  Um endereço do caractere denominado lpszExtraInfo,
  Um número denominado dwExtraInfoLength.

Um UUID é uma estrutura com \ Define um identificador único universal (UUID). 
  \Um UUID fornece uma designação exclusiva de um objeto, como uma interface, um vetor de ponto de entrada do gerenciador ou um objeto cliente.
  \A estrutura UUID é um sinônimo typedefizado para a estrutura GUID.
  Um número denominado d1, \unsigned long
  \ Especifica os primeiros 8 dígitos hexadecimais da GUID.
  Uma word denominada d2, \unsigned short
  \ Especifica o primeiro grupo de 4 dígitos hexadecimais.
  Uma word denominada d3, \unsigned short
  \ Especifica o segundo grupo de 4 dígitos hexadecimais.
  8 bytes denominados d4. \unsigned char
  \ Array de 8 bytes. 
  \ Os primeiros 2 bytes contêm o terceiro grupo de 4 dígitos hexadecimais. 
  \ Os 6 bytes restantes contêm os 12 dígitos hexadecimais finais.

Um WIN32FINDDATA é uma estrutura com \https://learn.microsoft.com/pt-br/windows/win32/api/minwinbase/ns-minwinbase-win32_find_dataa
\Contém informações sobre o arquivo localizado pela função FindFirstFile, FindFirstFileEx ou FindNextFile.
  Um número denominado dwFileAttributes,
  \Os atributos de arquivo de um arquivo.
  \Para valores possíveis e suas descrições, consulte https://learn.microsoft.com/pt-br/windows/desktop/FileIO/file-attribute-constants
  \O atributo FILE_ATTRIBUTE_SPARSE_FILE no arquivo é definido se qualquer um dos fluxos do arquivo já foi esparso.
  Um filetime denominado ftCreationTime,
  \Uma estrutura FILETIME que especifica quando um arquivo ou diretório foi criado.
  \Se o sistema de arquivos subjacente não suportar a hora de criação, este valor será zero.
  Um filetime denominado ftLastAccessTime,
  \Uma estrutura FILETIME.
  \Para um arquivo, a estrutura especifica quando o arquivo foi lido pela última vez, gravado ou executado para arquivos executáveis.
  \Para um diretório, a estrutura especifica quando o diretório é criado. 
  \Se o sistema de arquivos subjacente não suportar a hora do último acesso, esse membro será zero.
  \No sistema de arquivos FAT, a data especificada para arquivos e diretórios está correta, mas a hora do dia é sempre definida para meia-noite.
  Um filetime denominado ftLastWriteTime,
  \Uma estrutura FILETIME. https://learn.microsoft.com/pt-br/windows/desktop/api/minwinbase/ns-minwinbase-filetime
  \Para um arquivo, a estrutura especifica quando o arquivo foi gravado, truncado ou substituído pela última vez, por exemplo, quando WriteFile ou SetEndOfFile são usados. 
  \ A data e a hora não são atualizadas quando os atributos do arquivo ou descritores de segurança são alterados.
  \Para um diretório, a estrutura especifica quando o diretório é criado. 
  \Se o sistema de arquivos subjacente não suportar a hora da última gravação, esse valor será zero.
  Um número denominado nFileSizeHigh,
  \O valor DWORD de ordem superior do tamanho do arquivo, em bytes.
  \Este valor é zero, a menos que o tamanho do arquivo seja maior que MAXDWORD.
  \O tamanho do arquivo é igual a (nFileSizeHigh * (MAXDWORD + 1)) + nFileSizeLow.
  Um número denominado nFileSizeLow,
  \ O valor DWORD de ordem inferior do tamanho do arquivo, em bytes.
  Um número denominado dwReserved0,
  \Se o membro dwFileAttributes inclui o atributo FILE_ATTRIBUTE_REPARSE_POINT, este membro especifica a marca de ponto de nova análise.
  \Caso contrário, este valor é indefinido e não deve ser usado.
  \Para obter mais informações, consulte https://learn.microsoft.com/pt-br/windows/desktop/FileIO/reparse-point-tags
  Um número denominado dwReserved1,
  \Reservado para uso futuro.
  260 bytes denominados cFileName,
   \ O nome do arquivo.
  14 bytes denominados cAlternateFileName.
  \ Um nome alternativo para o arquivo.
  \ Este nome está no formato clássico de nome de arquivo 8.3.

Uma janela do programa class é uma estrutura com
  \Contém informações de classe de janela. 
  \Os dois campos mais importantes na estrutura WNDCLASS são o segundo e o último.
  \Esta estrutura inclui dois campos que são ponteiros para cadeias de caracteres
  \É usada com as funções RegisterClassEx e GetClassInfoEx.  
  Um número denominado cbSize,
  \ O tamanho, em bytes, dessa estrutura. 
  \ Defina este membro como sizeof (WNDCLASSEX). 
  \ Certifique-se de definir esse membro antes de chamar a função GetClassInfoEx. https://learn.microsoft.com/pt-br/windows/desktop/api/winuser/nf-winuser-getclassinfoexa
  Um número denominado style,
  \ O (s) estilo (s) da classe. 
  \ Este membro pode ser qualquer combinação dos estilos de classe. https://learn.microsoft.com/pt-br/windows/desktop/winmsg/aproximadamente-janela do programa-classes
  Um ponteiro denominado lpfnWndProc, \O prefixo lpfn significa "ponteiro longo" para uma função.
  \ Um ponteiro para o procedimento da janela.
  \Você deve usar a função CallWindowProc para chamar o procedimento de janela. 
  \Para obter mais informações, consulte https://learn.microsoft.com/pt-br/previous-versions/windows/desktop/legacy/ms633573(v=vs.85)
  Um número denominado cbClsExtra,
  \ O número de bytes extras a serem alocados seguindo a estrutura da classe da janela. O sistema inicializa os bytes para zero.
  Um número denominado cbWndExtra,
  \ O número de bytes extras a serem alocados após a instância da janela.
  \ O sistema inicializa os bytes para zero.
  \ Se um aplicativo usa WNDCLASSEX para registrar uma caixa de diálogo criada usando a diretiva CLASS no arquivo de recurso, ele deve definir este membro como DLGWINDOWEXTRA.
  Um número identificador denominado hInstance,
  \ Um identificador para a instância que contém o procedimento de janela para a classe.
  Um hIcon denominado hIcon,
  \ Um número identificador do ícone da classe.
  \ Se este membro for NULL, o sistema fornecerá um ícone padrão.
  Um cursor denominado hCursor,
  \ Um identificador para o cursor da classe. 
  \ Se este membro for NULL, um aplicativo deve definir explicitamente a forma do cursor sempre que o mouse se move para a janela do aplicativo.
  Um hBrush denominado hbrBackground,
  \ Um número identificador da canetinha de plano de fundo da classe.
  \ Este membro pode ser um identificador para a cor da canetinha a ser usado para pintar o plano de fundo ou pode ser um valor de cor. 
  \ Um valor de cor deve ser uma das seguintes cores padrão do sistema (o valor 1 deve ser adicionado à cor escolhida).  
  Um ponteiro denominado lpszMenuName, \O prefixo lpsz é um "ponteiro longo" para uma string terminada em zero (NUL).
  \ Ponteiro para uma cadeia de caracteres terminada em nulo que especifica o nome do recurso do menu da classe, conforme o nome aparece no arquivo de recurso. 
  \ Se você usar um número inteiro para identificar o menu, use a macro MAKEINTRESOURCE.
  \ https://learn.microsoft.com/pt-br/windows/desktop/api/winuser/nf-winuser-makeintresourcea
  \ Se este membro for NULL, as janelas pertencentes a esta classe não terão menu padrão.
  Um ponteiro denominado lpszClassName,
  \ Um ponteiro para uma string terminada em nulo. 
  \Esse campo é o nome do texto da classe da janela.
  \Isso pode ser o que você quiser. Em programas que criam apenas uma janela, o nome da classe da janela é comumente definido como o nome do programa.
  \O comprimento máximo para lpszClassName é 256. 
  \Se lpszClassName for maior que o comprimento máximo, a função RegisterClassEx falhará.
  Um hIcon denominado hIconSm.
  \ Um identificador para um pequeno ícone associado à classe da janela. 
  \ Se este membro for NULL, o sistema pesquisa o recurso de ícone especificado pelo membro hIcon para um ícone do tamanho apropriado para usar como o ícone pequeno.

A janela do programa class é uma janela do programa class.

Uma janela do programa é um número identificador.

Uma requisição WinHTTP é uma lista com
  Um número identificador de sessão,
  Um número identificador de conexão,
  Um número identificador de requisição.

Um WSADATA é uma estrutura com
  \A estrutura WSADATA contém informações sobre a implementação do Windows Sockets.
  Uma word denominada wVersion,
  \ A versão da especificação do Windows Sockets que o Ws2_32.dll espera que a rotina use. 
  \Nessa word, O byte de ordem superior especifica o número da versão secundária; 
  \O byte de ordem inferior especifica o número da versão principal.
  Uma word denominada wHighVersion,
  \ A versão mais recente da especificação do Windows Sockets que o Ws2_32.dll pode oferecer suporte. 
  \O byte de alta ordem especifica o número da versão secundária; o byte de ordem inferior especifica o número da versão principal.
  \Possui o mesmo valor que o membro wVersion caso a versão solicitada no parâmetro wVersionRequested 
  \(que é passado para a função WSAStartup) seja a versão mais alta da especificação Windows Sockets que o Ws2_32.dll pode suportar.
  257 bytes denominados szDescription,
  \Uma string ASCII terminada em NULL na qual o Ws2_32.dll copia uma descrição da implementação do Windows Sockets. 
  \O texto (até 256 caracteres de comprimento) pode conter qualquer caractere, exceto caracteres de controle e de formatação. 
  \O uso mais provável que um aplicativo teria para este membro é exibi-lo (possivelmente truncado) em uma mensagem de status.
  127 bytes denominados szSystemStatus,
  \ Uma string ASCII terminada em NULL na qual o Ws2_32.dll copia o status ou as informações de configuração relevantes. 
  \O Ws2_32.dll deve usar este parâmetro apenas se as informações forem úteis para o usuário ou equipe de suporte.
  \ Este membro não deve ser considerado uma extensão do parâmetro szDescription .
  Uma word [unsigned] denominado iMaxSockets,
  \O número máximo de soquetes que podem ser abertos. Este membro deve ser ignorado para Windows Sockets versão 2 e posterior.
  \O membro iMaxSockets é mantido para compatibilidade com a especificação 1.1 do Windows Sockets, mas não deve ser usado ao desenvolver novos aplicativos. 
  \Nenhum valor único pode ser apropriado para todos os provedores de serviços subjacentes. 
  \A arquitetura do Windows Sockets mudou na versão 2 para oferecer suporte a vários provedores, e a estrutura WSADATA não se aplica mais à pilha de um único fornecedor.
  Uma word [unsigned] denominado iMaxUdpDg,
  \O tamanho máximo da mensagem de datagrama. Este membro é ignorado para Windows Sockets versão 2 e posterior.
  \O membro iMaxUdpDg é mantido para compatibilidade com a especificação 1.1 do Windows Sockets, mas não deve ser usado ao desenvolver novos aplicativos. 
  \A arquitetura do Windows Sockets mudou na versão 2 para oferecer suporte a vários provedores, e a estrutura WSADATA não se aplica mais à pilha de um único fornecedor. 
  \Para o tamanho máximo real da mensagem específico para um determinado provedor de serviços do Windows Sockets e tipo de soquete, 
  \os aplicativos devem usar getsockopt para recuperar o valor da opção SO_MAX_MSG_SIZE após a criação de um soquete.
  Um ponteiro denominado lpVendorInfo.
  \Um ponteiro para informações específicas do fornecedor. 
  \Este membro deve ser ignorado para Windows Sockets versão 2 e posterior.
  \O membro lpVendorInfo é mantido para compatibilidade com a especificação 1.1 do Windows Sockets. 
  \A arquitetura do Windows Sockets mudou na versão 2 para oferecer suporte a vários provedores, e a estrutura WSADATA não se aplica mais à pilha de um único fornecedor. 
  \Os aplicativos que precisam acessar informações de configuração específicas do fornecedor devem usar getsockopt para recuperar o valor da opção PVD_CONFIG para informações específicas do fornecedor.

Um PROCESS_INFORMATION é uma estrutura com
  \ https://learn.microsoft.com/pt-br/windows/win32/api/processthreadsapi/ns-processthreadsapi-process_information
  Um número identificador denominado hProcess,
  Um número identificador denominado hThread,
  Um número denominado dwProcessId,
  Um número denominado dwThreadId.
  
Um LOGBRUSH é uma estrutura com \ https://learn.microsoft.com/pt-br/windows/win32/api/wingdi/ns-wingdi-logbrush
  \ A estrutura LOGBRUSH define o estilo, a cor e o padrão de uma canetinha. 
\É usado pelas funções CreateBrushIndirect e ExtCreatePen.
  Um número denominado lbStyle, \O estilo da canetinha. Os valores vão de 0 a 8.
  Um código da cor denominado lbColor, \A cor na qual a cor da canetinha deve ser desenhado. 
  \O valor de lbColor deve ser 0 ou 1.
  \ 0 indica que a tabela de cores consiste em uma matriz de índices de 16 bits na paleta lógica atual.
  \ 1 indica que a tabela de cores contém valores RGB literais.
  \Se lbStyle for igual a 1 (BS_HOLLOW) ou (BS_PATTERN), lbColor será ignorado.
  \Se lbStyle for  igual a 5(BS_DIBPATTERN) ou 6 (BS_DIBPATTERNPT), então 
  \ a word de ordem inferior de lbColor irá especificar 
  \se os membros bmiColors da estrutura BITMAPINFO contêm valores explícitos de vermelho, verde, azul (RGB) ou índices na paleta lógica atual.
  \Se lbStyle for 2 (BS_HATCHED) ou 0 (BS_SOLID), lbColor será um valor de cor COLORREF. 
  Um número denominado lbHatch. \Um estilo hachurado. O estilo depende do valor de  lbStyle.
  \ Se lbStyle for 0 ou 1 esse valor será ignorado
  \Se lbStyle for 2 (BS_HATCHED) então lbHatch vai especificar o estilo de rachurado, podendo ser um valord e 0 a 5
  \Se lbStyle for 3 (BS_PATTERN) então lbHatch vai vai ser um número identificador de um bitmap
  \Se lbStyle for 5 (BS_DIBPATTERN) então lbHatch vai ser um número identificador de uma packed DIB
  \Uma canetinha de padrão definido por uma especificação de bitmap independente de dispositivo (DIB).
  \Se lbStyle for 6 (BS_DIBPATTERNPT) então lbHatch vai ser um  ponteiro para uma packed DIB
  
Um FILETIME é uma estrutura com \ https://learn.microsoft.com/pt-br/windows/win32/api/minwinbase/ns-minwinbase-filetime
\Contém um valor de 64 bits que representa o número de intervalos de 100 nanossegundos desde 1º de janeiro de 1601 (UTC).
  Um número denominado dwLowDateTime, \A parte de ordem inferior do tempo do arquivo.
  Um número denominado dwHighDateTime. \A parte de ordem superior do tempo do arquivo.

Um DOCINFO é uma estrutura com \ https://learn.microsoft.com/pt-br/windows/win32/api/wingdi/ns-wingdi-docinfoa
\A estrutura DOCINFO contém os nomes dos arquivos de entrada e saída e outras informações usadas pela função StartDoc.
  Um número denominado cbSize, \O tamanho, em bytes, da estrutura.
  Um ponteiro denominado lpszDocName, \ Ponteiro para uma string terminada em nulo que especifica o nome do documento.
  Um ponteiro denominado lpszOutput, \Ponteiro para uma string terminada em nulo que especifica o nome de um arquivo de saída. 
  \Se este ponteiro for NULL, a saída será enviada ao dispositivo identificado pelo número identificador de contexto do dispositivo que foi passado para a função StartDoc.
  Um ponteiro denominado lpszDatatype, \Ponteiro para uma string terminada em nulo que especifica o tipo de dados usados para registrar o trabalho de impressão. 
  \Os valores corretos dessa variável podem ser obtidos chamando EnumPrintProcessorDatatypes e podem incluir valores como raw, emf ou XPS_PASS. 
  \Esta variável pode ser NULL. Observe que o tipo de dados solicitado pode ser ignorado.
  Um número denominado fwType. \Especifica informações adicionais sobre o trabalho de impressão. 
  \Este membro pode ser 0, 1 (DI_APPBANDING) ou 2 (DI_ROPS_READ_DESTINATION)


Um BitmapData é uma estrutura com \ https://learn.microsoft.com/pt-br/dotnet/api/system.drawing.imaging.BitmapData?view=dotnet-plat-ext-6.0
\Especifica os atributos de uma imagem bitmap. 
  Uma Largura, \ A largura em pixels do objeto Bitmap. Isso também pode ser considerado como o número de pixels em uma linha de varredura.
  Uma Altura, \ A altura em pixels do objeto Bitmap. Também conhecido como o número de linhas de varredura.
  Um número denominado Stride, \a largura da distância (também chamada de largura de verificação) do objeto Bitmap.
  \A distância é a largura de uma única linha de pixels (uma linha de varredura), arredondada para um limite de quatro bytes. 
  \Se a distãncia for positiva, o bitmap é de cima para baixo. Se a distância for negativo, o bitmap é ascendente.
  Um número denominado PixelFormat, \O formato das informações de pixel no objeto Bitmap.
  \O formato define quantos bits de memória são necessários para armazenar as informações de cor de um único pixel.
  Um ponteiro denominado Scan0, \o endereço dos primeiros dados de pixel no bitmap. Isso também pode ser considerado a primeira linha de varredura no bitmap.
  Um número denominado Reserved. \Reservado. Não use.

Um PAINTSTRUCT é uma estrutura com \ https://learn.microsoft.com/pt-br/windows/win32/api/winuser/ns-winuser-paintstruct
\A estrutura PAINTSTRUCT contém informações para um aplicativo. 
\Essas informações podem ser usadas para pintar a área do cliente de uma janela pertencente a esse aplicativo.
  Um hDC denominado hDC, \Um identificador para o display de contexto do dispositivo a ser usado para pintura.
  Um número denominado fErase, \Indica se o fundo deve ser apagado. Este valor é diferente de zero se o aplicativo deve apagar o plano de fundo. 
  \O aplicativo é responsável por apagar o fundo se uma classe de janela for criada sem uma canetinha de fundo. 
  \Para obter mais informações, consulte a descrição do membro hbrBackground da estrutura WNDCLASS.
  Uma caixa denominado rcPaint, \Uma estrutura RECT que especifica os cantos superior esquerdo e inferior direito do retângulo em que a pintura é solicitada, 
  \em unidades de dispositivo relativas ao canto superior esquerdo da área do cliente.
  Um número denominado fRestore, \Reservado; usado internamente pelo sistema.
  Um número denominado fIncUpdate, \Reservado; usado internamente pelo sistema.
  32 bytes. \rgbReserved -.Reservado; usado internamente pelo sistema.

Uma MSG é uma estrutura com \ https://learn.microsoft.com/pt-br/windows/win32/api/winuser/ns-winuser-MSG
\Contém informações de mensagem da fila de mensagens de um encadeamento (thread).
  Uma janela do programa denominado hwnd, \Um identificador para a janela cujo procedimento de janela recebe a mensagem. 
  \Esta variável é NULL quando a mensagem é uma mensagem de thread.
  Um número denominado message, \uint -> O identificador da mensagem. 
  \Os aplicativos só podem usar a word de ordem inferior; a word de ordem superior é reservada pelo sistema.
  Um wParam denominado wParam, \Informações adicionais sobre a mensagem. O significado exato depende do valor da variável message.
  Um lParam denominado lParam, \Informações adicionais sobre a mensagem. O significado exato depende do valor da variável message.
  Um número denominado time, \dword -> A hora em que a mensagem foi postada.
  Uma localização denominado pt. \point -. A posição do cursor, em coordenadas da tela, quando a mensagem foi postada.
  \Um número denominado lPrivate. \dword










